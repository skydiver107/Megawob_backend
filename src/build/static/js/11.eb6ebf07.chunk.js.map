{"version":3,"sources":["views/custom/nfts/AddNewModal.js","views/custom/nfts/Datatable.js","views/custom/nfts/index.js"],"names":["AddNewModal","open","handleModal","mode","data","handleSubmitModal","handleEditChange","CloseBtn","className","size","onClick","isOpen","toggle","modalClassName","contentClassName","close","tag","name","value","id","onChange","uri","imageUrl","type","checked","state","color","outline","Datatable","dispatch","useDispatch","store","useSelector","nft","useState","modal","setModal","setMode","currentPage","column","direction","rowsPerPage","searchValue","filter","setFilter","_id","prevUri","prevImageUrl","setData","count","Math","ceil","total","useEffect","getData","handleSort","filterData","console","log","sm","for","e","parseInt","target","handlePerPage","bsSize","striped","responsive","style","whiteSpace","cursor","map","element","index","caret","href","event","preventDefault","handleEditRow","confirm","deleteEvent","handleDeleteRow","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","breakClassName","nextLinkClassName","pageLinkClassName","breakLinkClassName","previousLinkClassName","nextClassName","previousClassName","containerClassName","addEvent","updateEvent","memo","Tables"],"mappings":"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","file":"static/js/11.eb6ebf07.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState } from 'react'\r\n\r\nimport { User, AlignCenter, Info, X } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Input,\r\n  Label\r\n} from 'reactstrap'\r\n// ** Styles\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\n\r\nconst AddNewModal = ({\r\n  open,\r\n  handleModal,\r\n  mode,\r\n  data,\r\n  handleSubmitModal,\r\n  handleEditChange\r\n}) => {\r\n\r\n  // ** Custom close btn\r\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleModal} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={handleModal}\r\n      className='sidebar-sm'\r\n      modalClassName='modal-slide-in'\r\n      contentClassName='pt-0'\r\n    >\r\n      <ModalHeader className='mb-3' toggle={handleModal} close={CloseBtn} tag='div'>\r\n        <h5 className='modal-title'>{mode === 'NEW' ? 'New Record' : 'Edit Record'}</h5>\r\n      </ModalHeader>\r\n      <ModalBody className='flex-grow-1'>\r\n        <div className='mb-1'>\r\n          <Label>* ID</Label>\r\n          <InputGroup>\r\n            <InputGroupText>\r\n              <User size={15} />\r\n            </InputGroupText>\r\n            <Input name='id' value={data.id} onChange={handleEditChange} />\r\n          </InputGroup>\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label>* Uri</Label>\r\n          <InputGroup>\r\n            <InputGroupText>\r\n              <User size={15} />\r\n            </InputGroupText>\r\n            <Input name='uri' value={data.uri} onChange={handleEditChange} />\r\n          </InputGroup>\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label>* Image Url</Label>\r\n          <InputGroup>\r\n            <InputGroupText>\r\n              <Info size={15} />\r\n            </InputGroupText>\r\n            <Input name='imageUrl' value={data.imageUrl} onChange={handleEditChange} />\r\n          </InputGroup>\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label>State</Label>\r\n          <div className='form-switch'>\r\n            <Input name='state' type='switch' checked={data.state} onChange={handleEditChange} />\r\n          </div>\r\n        </div>\r\n        <Button className='mr-1' color='primary' onClick={handleSubmitModal}>\r\n          Submit\r\n        </Button>\r\n        <Button color='secondary' onClick={handleModal} outline>\r\n          Cancel\r\n        </Button>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddNewModal\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect, memo } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { getData, addEvent, updateEvent, deleteEvent } from './store'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { Plus, Edit, MoreVertical, Trash, ChevronDown, ChevronUp } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, CardHeader, CardTitle, Input, Label, Row, Col, Button,\r\n  Table, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle\r\n} from 'reactstrap'\r\n\r\nimport AddNewModal from './AddNewModal'\r\n\r\nconst Datatable = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.nft)\r\n\r\n  // ** States\r\n  const [modal, setModal] = useState(false)\r\n  const [mode, setMode] = useState(\"NEW\")\r\n  const [filter, setFilter] = useState({\r\n    currentPage: 1,\r\n    column: 'id',\r\n    direction: 'asc',\r\n    rowsPerPage: 7,\r\n    searchValue: ''\r\n  })\r\n\r\n  const [data, setData] = useState(\r\n    {\r\n      _id: \"\",\r\n      id: 0,\r\n      uri: \"\",\r\n      imageUrl: \"\",\r\n      prevUri: \"\",\r\n      prevImageUrl: \"\",\r\n      state: 0\r\n    }\r\n  )\r\n\r\n  const count = Math.ceil(store.total / filter.rowsPerPage)\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData(filter)\r\n    )\r\n  }, [dispatch])\r\n\r\n  // ** Function to handle filter\r\n  const handleFilter = e => {\r\n    const filterData = {\r\n      ...filter,\r\n      searchValue: e.target.value,\r\n      currentPage: 1\r\n    }\r\n    setFilter(filterData)\r\n\r\n    dispatch(\r\n      getData(filterData)\r\n    )\r\n  }\r\n\r\n  // ** Function to handle Pagination and get data\r\n  const handlePagination = page => {\r\n    const filterData = {\r\n      ...filter,\r\n      currentPage: page.selected + 1\r\n    }\r\n    setFilter(filterData)\r\n    dispatch(\r\n      getData(filterData)\r\n    )\r\n  }\r\n\r\n  // ** Function to handle per page\r\n  const handlePerPage = e => {\r\n    const filterData = {\r\n      ...filter,\r\n      currentPage: 1,\r\n      rowsPerPage: parseInt(e.target.value)\r\n\r\n    }\r\n    setFilter(filterData)\r\n    dispatch(\r\n      getData(filterData)\r\n    )\r\n  }\r\n\r\n  const handleSort = (column) => {\r\n    if (filter.column === column) {\r\n      const filterData = {\r\n        ...filter,\r\n        currentPage: 1,\r\n        column,\r\n        direction: filter.direction === \"asc\" ? \"desc\" : \"asc\"\r\n      }\r\n      setFilter(filterData)\r\n      dispatch(\r\n        getData(filterData)\r\n      )\r\n    } else {\r\n      const filterData = {\r\n        ...filter,\r\n        currentPage: 1,\r\n        column,\r\n        direction: \"asc\"\r\n      }\r\n      setFilter(filterData)\r\n      dispatch(\r\n        getData(filterData)\r\n      )\r\n    }\r\n  }\r\n\r\n  // Custom Functions\r\n\r\n  // ** Function to handle Modal toggle\r\n  const handleModal = () => setModal(!modal)\r\n\r\n\r\n  const handleEditChange = (event) => {\r\n    switch (event.target.name) {\r\n      case 'state':\r\n        {\r\n          setData({\r\n            ...data,\r\n            [event.target.name]: event.target.checked ? 1 : 0\r\n          })\r\n        }\r\n        break\r\n      default:\r\n        setData({\r\n          ...data,\r\n          [event.target.name]: event.target.value\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNewModal = () => {\r\n    setData({\r\n      _id: \"\",\r\n      id: 0,\r\n      uri: \"\",\r\n      imageUrl: \"\",\r\n      state: 0\r\n    })\r\n    setMode(\"NEW\")\r\n    handleModal()\r\n  }\r\n\r\n  const handleEditRow = (event, id) => {\r\n    event.preventDefault()\r\n    setData({\r\n      ...store.data[id]\r\n    })\r\n    setMode(\"EDIT\")\r\n    handleModal()\r\n  }\r\n\r\n  const handleDeleteRow = (event, id) => {\r\n    event.preventDefault()\r\n\r\n    if (confirm(\"Do you want to delete this row?\")) {\r\n      dispatch(\r\n        deleteEvent(store.data[id]._id)\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSubmitModal = () => {\r\n    if (mode === \"NEW\") {\r\n      dispatch(\r\n        addEvent(data)\r\n      )\r\n\r\n      handleModal()\r\n    } else {\r\n      dispatch(\r\n        updateEvent(data)\r\n      )\r\n      handleModal()\r\n    }\r\n  }\r\n  console.log('store', store)\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='border-bottom'>\r\n          <CardTitle tag='h4'>NFTs With Trait</CardTitle>\r\n          <div className='d-flex mt-md-0 mt-1'>\r\n            <Button className='ml-2' color='primary' onClick={handleNewModal}>\r\n              <Plus size={15} />\r\n              <span className='align-middle ml-50'>Add Record</span>\r\n            </Button>\r\n          </div>\r\n        </CardHeader>\r\n        <Row className='mx-0 mt-1 mb-50'>\r\n          <Col sm='6'>\r\n            <div className='d-flex align-items-center'>\r\n              <Label for='sort-select'>show</Label>\r\n              <Input\r\n                className='dataTable-select'\r\n                type='select'\r\n                id='sort-select'\r\n                value={filter.rowsPerPage}\r\n                onChange={e => handlePerPage(e)}\r\n              >\r\n                <option value={7}>7</option>\r\n                <option value={10}>10</option>\r\n                <option value={25}>25</option>\r\n                <option value={50}>50</option>\r\n                <option value={75}>75</option>\r\n                <option value={100}>100</option>\r\n              </Input>\r\n              <Label for='sort-select'>entries</Label>\r\n            </div>\r\n          </Col>\r\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\r\n            <Label className='me-1' for='search-input'>\r\n              Search\r\n            </Label>\r\n            <Input\r\n              className='dataTable-filter'\r\n              type='text'\r\n              bsSize='sm'\r\n              id='search-input'\r\n              value={filter.searchValue}\r\n              onChange={handleFilter}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Table striped responsive>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }} onClick={() => handleSort(\"id\")} >\r\n                id {filter.column === \"id\" ? (filter.direction === \"desc\" ? <ChevronUp size={20} /> : <ChevronDown size={20} />) : \"\"}\r\n              </th>\r\n              <th style={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }} onClick={() => handleSort(\"uri\")}>\r\n                Uri  {filter.column === \"uri\" ? (filter.direction === \"desc\" ? <ChevronUp size={20} /> : <ChevronDown size={20} />) : \"\"}\r\n              </th>\r\n              {/* <th style={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }} onClick={() => handleSort(\"imageUrl\")}>\r\n                Image Url  {filter.column === \"imageUrl\" ? (filter.direction === \"desc\" ? <ChevronUp size={20} /> : <ChevronDown size={20} />) : \"\"}\r\n              </th> */}\r\n              <th style={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }} onClick={() => handleSort(\"state\")}>\r\n                State  {filter.column === \"state\" ? (filter.direction === \"desc\" ? <ChevronUp size={20} /> : <ChevronDown size={20} />) : \"\"}\r\n              </th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              store.data.map((element, index) => (\r\n                <tr key={index}>\r\n                  <td> {element.id} </td>\r\n                  <td> {element.uri} </td>\r\n                  {/* <td> {element.imageUrl} </td> */}\r\n                  <td> {element.state} </td>\r\n                  <td>\r\n                    <UncontrolledDropdown>\r\n                      <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\r\n                        <MoreVertical size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <DropdownItem href='/' onClick={(event) => handleEditRow(event, index)}>\r\n                          <Edit className='mr-50' size={15} /> <span className='align-middle'>Edit</span>\r\n                        </DropdownItem>\r\n                        <DropdownItem href='/' onClick={(event) => handleDeleteRow(event, index)}>\r\n                          <Trash className='mr-50' size={15} /> <span className='align-middle'>Delete</span>\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </td>\r\n                </tr>\r\n              )\r\n              )\r\n            }\r\n          </tbody>\r\n        </Table>\r\n        <ReactPaginate\r\n          previousLabel={''}\r\n          nextLabel={''}\r\n          breakLabel='...'\r\n          pageCount={count || 1}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={2}\r\n          activeClassName='active'\r\n          forcePage={filter.currentPage !== 0 ? filter.currentPage - 1 : 0}\r\n          onPageChange={page => handlePagination(page)}\r\n          pageClassName='page-item'\r\n          breakClassName='page-item'\r\n          nextLinkClassName='page-link'\r\n          pageLinkClassName='page-link'\r\n          breakLinkClassName='page-link'\r\n          previousLinkClassName='page-link'\r\n          nextClassName='page-item next-item'\r\n          previousClassName='page-item prev-item'\r\n          containerClassName={\r\n            'pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\r\n          }\r\n        />\r\n      </Card>\r\n      <AddNewModal\r\n        open={modal}\r\n        handleModal={handleModal}\r\n        mode={mode}\r\n        data={data}\r\n        handleEditChange={handleEditChange}\r\n        handleSubmitModal={handleSubmitModal}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(Datatable)\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Third Party Components\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Demo Components\r\nimport Datatable from './Datatable'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\nconst Tables = () => {\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Datatable />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Tables\r\n"],"sourceRoot":""}