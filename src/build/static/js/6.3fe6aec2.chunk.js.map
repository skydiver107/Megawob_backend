{"version":3,"sources":["utility/Utils.js","utility/hooks/useSkin.js","utility/hooks/useLayout.js","@core/layouts/BlankLayout.js","@core/components/avatar/index.js","router/routes/Custom.js","router/routes/Init.js","@core/components/customizer/index.js","@core/components/scrolltop/index.js","@core/layouts/components/footer/index.js","assets/images/portrait/small/avatar-s-11.jpg","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","utility/hooks/useRouterTransition.js","@core/layouts/VerticalLayout.js","navigation/vertical/apps.js","navigation/vertical/init.js","navigation/vertical/index.js","layouts/VerticalLayout.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","navigation/horizontal/index.js","navigation/horizontal/apps.js","layouts/HorizontalLayout.js","@core/layouts/components/layout-wrapper/index.js","@core/components/routes/PublicRoute.js","@core/components/routes/PrivateRoute.js","router/routes/index.js","router/Router.js","App.js"],"names":["isObjEmpty","obj","Object","keys","length","isUserLoggedIn","localStorage","getItem","getUserData","JSON","parse","getHomeRouteForLoggedInUser","userRole","DefaultRoute","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","useSkin","dispatch","useDispatch","store","useSelector","state","layout","useEffect","element","window","document","body","classList","remove","skin","add","dark","bordered","setSkin","type","handleSkin","useLayout","setLayout","value","handleLayout","breakpoint","innerWidth","addEventListener","lastLayout","setLastLayout","handleLastLayout","BlankLayout","useState","isMounted","setIsMounted","className","classnames","Avatar","forwardRef","props","ref","img","size","icon","color","status","badgeUp","content","Tag","tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","Settings","lazy","Proudcts","Orders","NFTs","Account","CustomRoutes","path","Country","InitDataRoutes","Customizer","isRtl","setIsRtl","isHidden","navbarType","footerType","transition","navbarColor","setIsHidden","contentWidth","menuCollapsed","setTransition","setNavbarType","setFooterType","setNavbarColor","setContentWidth","setMenuCollapsed","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","options","wheelPropagation","skinsArr","name","checked","map","radio","index","marginCondition","id","onChange","for","renderSkinsRadio","classNamePrefix","defaultValue","isClearable","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","ScrollTop","showOffset","scrollBehaviour","children","visible","setVisible","pageYOffset","scroll","top","behavior","Footer","Date","getFullYear","target","rel","UserDropdown","userData","setUserData","userAvatar","avatar","defaultAvatar","role","end","Link","to","handleLogout","NavbarUser","ThemeNavbar","VerticalMenuHeader","setMenuVisibility","setGroupOpen","menuHover","user","Toggler","themeConfig","app","appName","VerticalNavMenuLink","item","activeItem","LinkTag","externalLink","NavLink","t","useTranslation","disabled","active","navLink","newTab","isActive","title","badge","hasActiveChild","currentUrl","child","includes","removeChildren","openGroup","currentActiveGroup","indexOf","splice","canViewMenuGroup","ability","useContext","AbilityContext","hasAnyVisibleChild","some","can","action","resource","canViewMenuItem","VerticalNavMenuGroup","groupOpen","parentItem","groupActive","setGroupActive","setCurrentActiveGroup","location","useLocation","currentURL","pathname","onCollapseClick","parent","activeGroup","toggleOpenGroup","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","menuData","setActiveItem","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","onScrollY","container","scrollTop","current","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","handleRTL","useNavbarType","handleNavbarType","useFooterType","handleFooterType","useNavbarColor","handleNavbarColor","useRouterTransition","routerTransition","handleRouterTransition","VerticalLayout","navbar","footer","menuVisibility","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","menuHidden","val","handleMenuCollapsed","footerClasses","static","sticky","hidden","navbarClasses","floating","bgColorCondition","expand","light","show","customizer","handleMenuHidden","handleContentWidth","apps","init","navigation","HorizontalNavMenuLink","isChild","setMenuOpen","commonClass","applyHeight","enabled","phase","fn","data","stylesObj","pageHeight","innerHeight","popperEl","elements","popper","ddTop","getBoundingClientRect","clientHeight","maxHeight","overflowY","ddRef","left","closest","styles","HorizontalNavMenuGroup","submenu","menuOpen","popperElement","setPopperElement","referenceElement","setReferenceElement","popperOffsetHorizontal","popperPlacement","popperPlacementSubMenu","usePopper","placement","modifiers","offset","update","attributes","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","routerProps","currentActiveItem","LayoutWrapper","routeMeta","navbarStore","layoutStored","appLayoutCondition","appLayout","Fragment","query","memo","PublicRoute","route","restrictedRoute","meta","restricted","fallback","PrivateRoute","replace","getLayout","blank","vertical","horizontal","Routes","InitRoutes","MergeLayoutRoutes","defaultLayout","LayoutRoutes","filter","isBlank","RouteTag","publicRoute","Wrapper","getRouteMeta","getRoutes","AllRoutes","layoutItem","Error","Login","NotAuthorized","Router","allRoutes","useRoutes","getHomeRoute","App","setAllRoutes"],"mappings":"iTAGaA,EAAa,SAAAC,GAAG,OAAgC,IAA5BC,OAAOC,KAAKF,GAAKG,QAiDrCC,EAAiB,kBAAMC,aAAaC,QAAQ,aAC5CC,EAAc,kBAAMC,KAAKC,MAAMJ,aAAaC,QAAQ,cAUpDI,EAA8B,SAAAC,GACzC,MAAiB,UAAbA,EAA6BC,IAChB,WAAbD,EAA8B,kBAC3B,UAIIE,EAAoB,SAAAC,GAAK,kCACjCA,GADiC,IAEpCC,OAAO,2BACFD,EAAMC,QADL,IAEJC,UAAW,YACXC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,UAAW,gB,uGCvEFC,EAAU,WAErB,IAAMC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UA0BzC,OApBAC,qBAAU,WAAO,IAAD,EAERC,EAAUC,OAAOC,SAASC,MAUhC,EAAAH,EAAQI,WAAUC,OAAlB,oBAA4BL,EAAQI,YAGjB,UAAfT,EAAMW,MACRN,EAAQI,UAAUG,IAXD,CACjBC,KAAM,cACNC,SAAU,kBACV,YAAa,oBAQoBd,EAAMW,SAExC,CAACX,EAAMW,OAEH,CAAEA,KAAMX,EAAMW,KAAMI,QAxBX,SAAAC,GACdlB,EAASmB,YAAWD,Q,iCCbxB,sDAOaE,EAAY,WAEvB,IAAMpB,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAEnCgB,EAAY,SAAAC,GAChBtB,EAASuB,YAAaD,KA6BxB,GAAId,OAAQ,CACV,IAAMgB,EAAa,KAEfhB,OAAOiB,WAAaD,GACtBH,EAAU,YAGZb,OAAOkB,iBAAiB,UAAU,WAC5BlB,OAAOiB,YAAcD,GAAmC,aAArBtB,EAAMyB,YAA8C,aAAjBzB,EAAMG,QAC9EgB,EAAU,YAERb,OAAOiB,YAAcD,GAActB,EAAMyB,aAAezB,EAAMG,QAChEgB,EAAUnB,EAAMyB,eAKtB,MAAO,CAAEtB,OAAQH,EAAMG,OAAQgB,YAAWM,WAAYzB,EAAMyB,WAAYC,cA3ClD,SAAAN,GACpBtB,EAAS6B,YAAiBP,Q,2FC0BfQ,IAjCK,WAElB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGQpB,EAASd,cAATc,KAOR,OALAP,qBAAU,WAER,OADA2B,GAAa,GACN,kBAAMA,GAAa,MACzB,IAEED,EAKH,qBACEE,UAAWC,IAAW,aAAc,CAClC,cAAwB,SAATtB,IAFnB,SAKE,qBAAKqB,UAAU,sBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,eAAf,SACE,cAAC,IAAD,YAZD,O,4QCbLE,EAASC,sBAAW,SAACC,EAAOC,GAAS,IAAD,IAGtCC,EAiBEF,EAjBFE,IACAC,EAgBEH,EAhBFG,KACAC,EAeEJ,EAfFI,KACAC,EAcEL,EAdFK,MACAC,EAaEN,EAbFM,OACAC,EAYEP,EAZFO,QACAC,EAWER,EAXFQ,QACKC,EAUHT,EAVFU,IACAC,EASEX,EATFW,SACAC,EAQEZ,EARFY,SACAhB,EAOEI,EAPFJ,UACAiB,EAMEb,EANFa,UACAC,EAKEd,EALFc,UACAC,EAIEf,EAJFe,WACAC,EAGEhB,EAHFgB,aACAC,EAEEjB,EAFFiB,cACGC,EAjBL,YAkBIlB,EAlBJ,GA8BA,OACE,eAACS,EAAD,yBACEb,UAAWC,IAAW,UAAD,mBAClBD,EAAYA,GADM,2BAEZS,GAAUA,GAFE,+BAGRF,GAASA,GAHD,IAKrBF,IAAKA,GACDiB,GAPN,eASW,IAARhB,QAAyBiB,IAARjB,EAChB,uBACEN,UAAWC,IAAW,iBAAkB,CACtC,oBAAqBU,IAEvBa,MAAOH,EAJT,UAMGN,EA1BW,SAAAU,GAClB,IAAMC,EAAU,GAKhB,OAJkBD,EAAIE,MAAM,KAClBC,SAAQ,SAAAC,GAChBH,EAAQI,KAAKD,EAAE,OAEVH,EAAQK,KAAK,IAoBFC,CAAYpB,GAAWA,EAElCJ,GAAc,KACdG,EACC,cAAC,IAAD,CAAOF,MAAOU,GAA0B,UAAWnB,UAAU,oBAAoBiC,MAAI,EAArF,SACGhB,GAAwB,MAEzB,QAGN,qBACEjB,UAAWC,IAAW,eACnBmB,EAAeA,IAElBc,IAAK5B,EACL6B,IAAI,YACJC,OAAQlB,IAAcX,EAAOW,EAAY,GACzCmB,MAAOrB,IAAaT,EAAOS,EAAW,KAGzCN,EACC,sBACEV,UAAWC,KAAU,2CACDS,GAAWA,GADV,sCAEDH,GAASA,GAFR,MAKrB,YAKKL,MA+DfA,EAAOoC,aAAe,CACpBxB,IAAK,Q,0ICzJDyB,EAAWC,gBAAK,kBAAM,wDACtBC,EAAWD,gBAAK,kBAAM,uDACtBE,EAASF,gBAAK,kBAAM,uDACpBG,EAAOH,gBAAK,kBAAM,wDAClBI,EAAUJ,gBAAK,kBAAM,kCAyBZK,EAvBM,CACnB,CACEC,KAAM,mBACNzE,QAAS,cAACkE,EAAD,KAEX,CACEO,KAAM,mBACNzE,QAAS,cAACoE,EAAD,KAEX,CACEK,KAAM,iBACNzE,QAAS,cAACqE,EAAD,KAEX,CACEI,KAAM,eACNzE,QAAS,cAACsE,EAAD,KAEX,CACEG,KAAM,kBACNzE,QAAS,cAACuE,EAAD,MCzBPG,EAAUP,gBAAK,kBAAM,uDASZQ,EAPQ,CACrB,CACEF,KAAM,gBACNzE,QAAS,cAAC0E,EAAD,M,uICgXEE,G,OAvWI,SAAA7C,GAEjB,IACEzB,EAqBEyB,EArBFzB,KACAuE,EAoBE9C,EApBF8C,MACA/E,EAmBEiC,EAnBFjC,OACAY,EAkBEqB,EAlBFrB,QACAoE,EAiBE/C,EAjBF+C,SACAC,EAgBEhD,EAhBFgD,SACAjE,EAeEiB,EAfFjB,UACAkE,EAcEjD,EAdFiD,WACAC,EAaElD,EAbFkD,WACAC,EAYEnD,EAZFmD,WACAC,EAWEpD,EAXFoD,YACAC,EAUErD,EAVFqD,YACAC,EASEtD,EATFsD,aACAC,EAQEvD,EARFuD,cACAjE,EAOEU,EAPFV,cACAkE,EAMExD,EANFwD,cACAC,EAKEzD,EALFyD,cACAC,EAIE1D,EAJF0D,cACAC,EAGE3D,EAHF2D,eACAC,EAEE5D,EAFF4D,gBACAC,EACE7D,EADF6D,iBAIF,EAA4CpE,oBAAS,GAArD,mBAAOqE,EAAP,KAAuBC,EAAvB,KAGMC,EAAe,SAAAvC,GACnBA,EAAEwC,iBACFF,GAAmBD,IAiJfI,EAAoB,CACxB,CAAElF,MAAO,SAAUmF,MAAO,QAC1B,CAAEnF,MAAO,aAAcmF,MAAO,gBAC9B,CAAEnF,MAAO,SAAUmF,MAAO,WAC1B,CAAEnF,MAAO,OAAQmF,MAAO,SAIpBC,EAAkBF,EAAkBG,MAAK,SAAAC,GAAC,OAAIA,EAAEtF,QAAUmE,KAEhE,OACE,sBACEvD,UAAWC,IAAW,+BAAgC,CACpD0E,KAAMT,IAFV,UAKE,mBAAGU,KAAK,IAAI5E,UAAU,qEAAqE6E,QAAST,EAApG,SACE,cAAC,IAAD,CAAU7D,KAAM,GAAIP,UAAU,cAEhC,eAAC,IAAD,CAAkBA,UAAU,qBAAqB8E,QAAS,CAAEC,kBAAkB,GAA9E,UACE,sBAAK/E,UAAU,qDAAf,UACE,oBAAIA,UAAU,OAAd,8BACA,mBAAGA,UAAU,MAAb,8CACA,mBAAG4E,KAAK,IAAI5E,UAAU,mBAAmB6E,QAAST,EAAlD,SACE,cAAC,IAAD,SAIJ,uBAEA,sBAAKpE,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,UAAb,kBACA,qBAAKA,UAAU,SAAf,SA9Ke,WACvB,IAAMgF,EAAW,CACf,CACEC,KAAM,QACNV,MAAO,QACPW,QAAkB,UAATvG,GAEX,CACEsG,KAAM,WACNV,MAAO,WACPW,QAAkB,aAATvG,GAEX,CACEsG,KAAM,OACNV,MAAO,OACPW,QAAkB,SAATvG,GAEX,CACEsG,KAAM,YACNV,MAAO,YACPW,QAAkB,cAATvG,IAIb,OAAOqG,EAASG,KAAI,SAACC,EAAOC,GAC1B,IAAMC,EAAkBD,IAAUL,EAASrI,OAAS,EAEpD,MAAe,eAAXwB,GAA0C,cAAfiH,EAAMH,KAC5B,KAIP,sBAAiBjF,UAAWC,IAAW,aAAc,CAAE,YAAaqF,IAApE,UACE,cAAC,IAAD,CAAOtG,KAAK,QAAQuG,GAAIH,EAAMH,KAAMC,QAASE,EAAMF,QAASM,SAAU,kBAAMzG,EAAQqG,EAAMH,SAC1F,cAAC,IAAD,CAAOjF,UAAU,mBAAmByF,IAAKL,EAAMH,KAA/C,SACGG,EAAMb,UAHDc,MA8ImBK,QAG3B,sBAAK1F,UAAU,OAAf,UACE,mBAAGA,UAAU,UAAb,2BACA,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CACEhB,KAAK,QACLuG,GAAG,aACHL,QAA0B,SAAjBxB,EACT8B,SAAU,kBAAMxB,EAAgB,WAElC,cAAC,IAAD,CAAOhE,UAAU,mBAAmByF,IAAI,aAAxC,2BAIF,sBAAKzF,UAAU,aAAf,UACE,cAAC,IAAD,CACEuF,GAAG,QACHvG,KAAK,QACLkG,QAA0B,UAAjBxB,EACT8B,SAAU,kBAAMxB,EAAgB,YAElC,cAAC,IAAD,CAAOhE,UAAU,mBAAmByF,IAAI,QAAxC,4BAON,qBAAKzF,UAAU,wBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,mBAAGA,UAAU,uBAAb,iBACA,cAAC,IAAD,CAAOhB,KAAK,SAASuG,GAAG,MAAMN,KAAK,MAAMC,QAAShC,EAAOsC,SAAU,kBAAMrC,GAAUD,WAIvF,qBAAKlD,UAAU,OAAf,SACE,sBAAKA,UAAU,oDAAf,UACE,mBAAGA,UAAU,eAAb,+BACA,cAAC,IAAD,CACE1C,MAAOD,IACP2C,UAAU,eACV2F,gBAAgB,SAChBC,aAActB,EAAkB,GAChClF,MAAOoF,EACPM,QAASR,EACTuB,aAAa,EACbL,SAAU,gBAAGpG,EAAH,EAAGA,MAAH,OAAewE,EAAcxE,cAM/C,uBAEA,sBAAKY,UAAU,OAAf,UACE,mBAAGA,UAAU,UAAb,yBACA,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CACEhB,KAAK,QACLuG,GAAG,kBACHL,QAAoB,aAAX/G,EACTqH,SAAU,WACRrG,EAAU,YACVO,EAAc,eAGlB,cAAC,IAAD,CAAOM,UAAU,mBAAmByF,IAAI,kBAAxC,yBAIF,sBAAKzF,UAAU,aAAf,UACE,cAAC,IAAD,CACEhB,KAAK,QACLuG,GAAG,oBACHL,QAAoB,eAAX/G,EACTqH,SAAU,WACRrG,EAAU,cACVO,EAAc,iBAGlB,cAAC,IAAD,CAAOM,UAAU,mBAAmByF,IAAI,oBAAxC,gCAMM,eAAXtH,EACC,qBAAK6B,UAAU,wBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,mBAAGA,UAAU,uBAAb,4BACA,cAAC,IAAD,CACEhB,KAAK,SACLuG,GAAG,iBACHN,KAAK,iBACLC,QAASvB,EACT6B,SAAU,kBAAMvB,GAAkBN,WAItC,KAEJ,qBAAK3D,UAAU,wBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,mBAAGA,UAAU,uBAAb,yBACA,cAAC,IAAD,CACEhB,KAAK,SACLuG,GAAG,cACHN,KAAK,cACLC,QAAS9B,EACToC,SAAU,kBAAM/B,GAAaL,cAMrC,uBAEA,sBAAKpD,UAAU,OAAf,UACc,eAAX7B,EACC,sBAAK6B,UAAU,OAAf,UACE,mBAAGA,UAAU,UAAb,0BACA,oBAAIA,UAAU,4BAAd,SAhQQ,CAAC,QAAS,UAAW,YAAa,UAAW,SAAU,OAAQ,UAAW,QAE3EmF,KAAI,SAAA1E,GAAK,OACxB,oBAEET,UAAWC,IAAW,gBAAD,OAAiBQ,GAAS,CAC7CqF,SAAUtC,IAAgB/C,EAC1BsF,OAAkB,UAAVtF,IAEVoE,QAAS,kBAAMd,EAAetD,KALzBA,WA8PC,KAEJ,sBAAKT,UAAU,OAAf,UACE,oBAAGA,UAAU,UAAb,UAAmC,eAAX7B,EAA0B,OAAS,SAA3D,WACA,qBAAK6B,UAAU,SAAf,SAvPoB,WAC5B,IAAMgG,EAAgB,CACpB,CACEf,KAAM,WACNV,MAAO,WACPW,QAAwB,aAAf7B,GAEX,CACE4B,KAAM,SACNV,MAAO,SACPW,QAAwB,WAAf7B,GAEX,CACE4B,KAAM,SACNV,MAAO,SACPW,QAAwB,WAAf7B,GAEX,CACE4B,KAAM,SACNV,MAAO,SACPW,QAAwB,WAAf7B,IAIb,OAAO2C,EAAcb,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAkBD,IAAUW,EAAcrJ,OAAS,EAEzD,MAAe,eAAXwB,GAA0C,WAAfiH,EAAMH,KAC5B,KAIP,sBAAiBjF,UAAWC,IAAW,aAAc,CAAE,YAAaqF,IAApE,UACE,cAAC,IAAD,CAAOtG,KAAK,QAAQuG,GAAIH,EAAMH,KAAMC,QAASE,EAAMF,QAASM,SAAU,kBAAM3B,EAAcuB,EAAMH,SAChG,cAAC,IAAD,CAAOjF,UAAU,mBAAmByF,IAAKL,EAAMH,KAA/C,SACGG,EAAMb,UAHDc,MAuNmBY,WAI7B,uBAEA,qBAAKjG,UAAU,OAAf,SACE,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,UAAb,yBACA,qBAAKA,UAAU,SAAf,SArNoB,WAC5B,IAAMkG,EAAgB,CACpB,CACEjB,KAAM,SACNV,MAAO,SACPW,QAAwB,WAAf5B,GAEX,CACE2B,KAAM,SACNV,MAAO,SACPW,QAAwB,WAAf5B,GAEX,CACE2B,KAAM,SACNV,MAAO,SACPW,QAAwB,WAAf5B,IAIb,OAAO4C,EAAcf,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAkBD,IAAUa,EAAcvJ,OAAS,EAEzD,OACE,sBAAiBqD,UAAWC,IAAW,aAAc,CAAE,YAAaqF,IAApE,UACE,cAAC,IAAD,CACEtG,KAAK,QACLkG,QAASE,EAAMF,QACfK,GAAE,iBAAYH,EAAMH,MACpBO,SAAU,kBAAM1B,EAAcsB,EAAMH,SAEtC,cAAC,IAAD,CAAOjF,UAAU,mBAAmByF,IAAG,iBAAYL,EAAMH,MAAzD,SACGG,EAAMb,UARDc,MA8LmBc,kB,sDCzW/BC,EAAY,SAAAhG,GAEhB,IAAQiG,EAAmDjG,EAAnDiG,WAAYC,EAAuClG,EAAvCkG,gBAAiBC,EAAsBnG,EAAtBmG,SAAajF,EAAlD,YAA2DlB,EAA3D,GAGA,EAA8BP,oBAAS,GAAvC,mBAAO2G,EAAP,KAAgBC,EAAhB,KAEArI,qBAAU,WACJE,QACFA,OAAOkB,iBAAiB,UAAU,WAC5BlB,OAAOoI,aAAeL,EACxBI,GAAW,GAEXA,GAAW,QAIhB,IAMH,OACED,GACE,6CAAKxG,UAAU,gBAAgB6E,QANT,WACxBvG,OAAOqI,OAAO,CAAEC,IAAK,EAAGC,SAAUP,MAK+BhF,GAA/D,aACGiF,MAMMH,IASfA,EAAU9D,aAAe,CACvBgE,gBAAiB,UC7CnB,IAkBeQ,EAlBA,WACb,OACE,mBAAG9G,UAAU,gBAAb,SACE,uBAAMA,UAAU,iDAAhB,6BACe,IAAI+G,MAAOC,cAAe,IACvC,mBAAGpC,KAAK,8CAA8CqC,OAAO,SAASC,IAAI,sBAA1E,uBAGA,sBAAMlH,UAAU,2BAAhB,yC,2CCXO,MAA0B,wCC4F1BmH,EArEM,WAEnB,IAAMrJ,EAAWC,cAGjB,EAAgC8B,mBAAS,MAAzC,mBAAOuH,EAAP,KAAiBC,EAAjB,KAGAjJ,qBAAU,WACiB,OAArBxB,eACFyK,EAAYrK,KAAKC,MAAMJ,aAAaC,QAAQ,gBAE7C,IAGH,IAAMwK,EAAcF,GAAYA,EAASG,QAAWC,EAEpD,OACE,eAAC,IAAD,CAAsB1G,IAAI,KAAKd,UAAU,yBAAzC,UACE,eAAC,IAAD,CAAgB4E,KAAK,IAAI9D,IAAI,IAAId,UAAU,8BAA8B6E,QAAS,SAAAhD,GAAC,OAAIA,EAAEwC,kBAAzF,UACE,sBAAKrE,UAAU,4BAAf,UACE,sBAAMA,UAAU,oBAAhB,SAAsCoH,GAAYA,EAAQ,UAAiB,aAC3E,sBAAMpH,UAAU,cAAhB,SAAgCoH,GAAYA,EAASK,MAAS,aAEhE,cAAC,IAAD,CAAQnH,IAAKgH,EAAYpG,UAAU,KAAKF,SAAS,KAAKN,OAAO,cAE/D,eAAC,IAAD,CAAcgH,KAAG,EAAjB,UACE,eAAC,IAAD,CAAc5G,IAAK6G,IAAMC,GAAG,kBAA5B,UACE,cAAC,IAAD,CAAMrH,KAAM,GAAIP,UAAU,UAC1B,sBAAMA,UAAU,eAAhB,wBA+BF,eAAC,IAAD,CAAcc,IAAK6G,IAAMC,GAAG,SAAS/C,QAAS,kBAAM/G,EAAS+J,gBAA7D,UACE,cAAC,IAAD,CAAOtH,KAAM,GAAIP,UAAU,UAC3B,sBAAMA,UAAU,eAAhB,8BC5CK8H,G,cA5BI,SAAA1H,GAESA,EAAlBzB,KAAkByB,EAAZrB,QAWd,OACE,oBAAIiB,UAAU,4CAAd,SAUE,cAAC,EAAD,QCpBS+H,EAXK,SAAA3H,GAElB,IAAQzB,EAAkByB,EAAlBzB,KAAMI,EAAYqB,EAAZrB,QAEd,OACE,cAAC,WAAD,UACE,cAAC,EAAD,CAAYJ,KAAMA,EAAMI,QAASA,O,kBC0DxBiJ,EAzDY,SAAA5H,GAEzB,IAAQuD,EAAgFvD,EAAhFuD,cAAeM,EAAiE7D,EAAjE6D,iBAAkBgE,EAA+C7H,EAA/C6H,kBAAmBC,EAA4B9H,EAA5B8H,aAAcC,EAAc/H,EAAd+H,UAGpEC,EAAOrL,cAGbqB,qBAAU,YACH+J,GAAaxE,GAAeuE,EAAa,MAC7C,CAACC,EAAWxE,IAGf,IAAM0E,EAAU,WACd,OAAK1E,EAWD,cAAC,IAAD,CACEpD,KAAM,GACN,YAAU,cACVP,UAAU,6CACV6E,QAAS,kBAAMZ,GAAiB,MAblC,cAAC,IAAD,CACE1D,KAAM,GACN,YAAU,cACVP,UAAU,6CACV6E,QAAS,kBAAMZ,GAAiB,OAexC,OACE,qBAAKjE,UAAU,gBAAf,SACE,qBAAIA,UAAU,0BAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,eAAC,IAAD,CAAS4H,GAAIQ,EAAOlL,YAA4BkL,EAAKX,MAAQ,IAAKzH,UAAU,eAA5E,UACE,sBAAMA,UAAU,eAGhB,oBAAIA,UAAU,kBAAd,SAAiCsI,IAAYC,IAAIC,eAGrD,oBAAIxI,UAAU,sBAAd,SACE,sBAAKA,UAAU,4CAAf,UACE,cAACqI,EAAD,IACA,cAAC,IAAD,CAAGxD,QAAS,kBAAMoD,GAAkB,IAAQjI,UAAU,uCAAuCO,KAAM,gB,SCFhGkI,EAlDa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAE7BC,EAAUF,EAAKG,aAAe,IAAMC,IAGlCC,EAAMC,cAAND,EAER,OACE,oBACE/I,UAAWC,IAAW,CACpB,YAAayI,EAAKnC,SAClB0C,SAAUP,EAAKO,SACfC,OAAQR,EAAKS,UAAYR,IAJ7B,SAOE,eAACC,EAAD,yBACE5I,UAAU,4BACViH,OAAQyB,EAAKU,OAAS,cAAW7H,IAEN,IAAtBmH,EAAKG,aACN,CACEjE,KAAM8D,EAAKS,SAAW,KAExB,CACEvB,GAAIc,EAAKS,SAAW,IACpBnJ,UAAW,YACT,GAD2B,EAAfqJ,WACKX,EAAKO,SACpB,MAAO,sCAZnB,IAgBEpE,QAAS,SAAAhD,GACqB,IAAxB6G,EAAKS,QAAQxM,QAAiC,MAAjB+L,EAAKS,UAAqC,IAAlBT,EAAKO,UAC5DpH,EAAEwC,kBAlBR,UAsBGqE,EAAKlI,KACN,sBAAMR,UAAU,0BAAhB,SAA2C+I,EAAEL,EAAKY,SAEjDZ,EAAKa,OAASb,EAAKzH,UAClB,cAAC,IAAD,CAAOjB,UAAU,eAAeS,MAAOiI,EAAKa,MAAOtH,MAAI,EAAvD,SACGyG,EAAKzH,YAEN,Y,gBCZCuI,EAAiB,SAAjBA,EAAkBd,EAAMe,GACnC,IAAQlD,EAAamC,EAAbnC,SAER,IAAKA,EACH,OAAO,EAJyC,oBAO9BA,GAP8B,IAOlD,2BAA8B,CAAC,IAApBmD,EAAmB,QAC5B,GAAIA,EAAMnD,UACJiD,EAAeE,EAAOD,GACxB,OAAO,EAKX,GAAIC,GAASA,EAAMP,SAAWM,IAAeC,EAAMP,UAAYM,GAAcA,EAAWE,SAASD,EAAMP,UACrG,OAAO,GAhBuC,8BAoBlD,OAAO,GAWIS,GAAiB,SAAjBA,EAAkBrD,EAAUsD,EAAWC,GAClDvD,EAAS3E,SAAQ,SAAA8H,GACf,IAAKI,EAAmBH,SAASD,EAAMnE,IAAK,CAC1C,IAAMF,EAAQwE,EAAUE,QAAQL,EAAMnE,IAClCF,GAAS,GAAGwE,EAAUG,OAAO3E,EAAO,GACpCqE,EAAMnD,UAAUqD,EAAeF,EAAMnD,SAAUsD,EAAWC,QAKvDG,GAAmB,SAAAvB,GAC9B,IAAMwB,EAAUC,qBAAWC,KAErBC,EAAqB3B,EAAKnC,UAAYmC,EAAKnC,SAAS+D,MAAK,SAAA5F,GAAC,OAAIwF,EAAQK,IAAI7F,EAAE8F,OAAQ9F,EAAE+F,aAI5F,OAAM/B,EAAK8B,QAAU9B,EAAK+B,SAGnBP,EAAQK,IAAI7B,EAAK8B,OAAQ9B,EAAK+B,WAAaJ,EAFzCA,GAKEK,GAAkB,SAAAhC,GAE7B,OADgByB,qBAAWC,KACZG,IAAI7B,EAAK8B,OAAQ9B,EAAK+B,W,yKCiExBE,GAlJc,SAAC,GAavB,IAZLjC,EAYI,EAZJA,KACAkC,EAWI,EAXJA,UACAzC,EAUI,EAVJA,UACAQ,EASI,EATJA,WACAkC,EAQI,EARJA,WACAC,EAOI,EAPJA,YACA5C,EAMI,EANJA,aACAvE,EAKI,EALJA,cACAoH,EAII,EAJJA,eACAjB,EAGI,EAHJA,mBACAkB,EAEI,EAFJA,sBACG1J,EACC,kBAEIyH,EAAMC,cAAND,EACFkC,EAAWC,cAGXC,EAAaD,cAAcE,SAoD3BC,EAAkB,SAACxJ,EAAG6G,IAjDJ,SAACA,EAAM4C,GAC7B,IAAIzB,EAAYe,EACVW,EAAcT,EAGhBjB,EAAUF,SAASjB,EAAKnD,KAC1BsE,EAAUG,OAAOH,EAAUE,QAAQrB,EAAKnD,IAAK,GAGzCmD,EAAKnC,UACPqD,GAAelB,EAAKnC,SAAUsD,EAAWiB,IAElCS,EAAY5B,SAASjB,EAAKnD,KAAOuE,EAAmBH,SAASjB,EAAKnD,MAItEgG,EAAY5B,SAASjB,EAAKnD,KAAOuE,EAAmBH,SAASjB,EAAKnD,IACrEgG,EAAYzJ,KAAK4G,EAAKnD,IAEtBgG,EAAYvB,OAAOuB,EAAYxB,QAAQrB,EAAKnD,IAAK,GAInDwF,EAAe,YAAIQ,KACVD,GAELA,EAAO/E,UACTqD,GAAe0B,EAAO/E,SAAUsD,EAAWiB,GAIxCjB,EAAUF,SAASjB,EAAKnD,KAC3BsE,EAAU/H,KAAK4G,EAAKnD,MAMtBsE,EAAY,IAGGF,SAASjB,EAAKnD,KAC3BsE,EAAU/H,KAAK4G,EAAKnD,IAGxB2C,EAAa,YAAI2B,IAKjB2B,CAAgB9C,EAAMmC,GAEtBhJ,EAAEwC,kBAIJjG,qBAAU,WACR,GAAIoL,EAAed,EAAMyC,GAClBL,EAAYnB,SAASjB,EAAKnD,KAAKuF,EAAYhJ,KAAK4G,EAAKnD,QACrD,CACL,IAAMF,EAAQyF,EAAYf,QAAQrB,EAAKnD,IACnCF,GAAS,GAAGyF,EAAYd,OAAO3E,EAAO,GAE5C0F,EAAe,YAAID,IACnBE,EAAsB,YAAIF,IAC1B5C,EAAa,MACZ,CAAC+C,IAGJ,IAA2B1F,EAY3B,OACE,qBACEvF,UAAWC,IAAW,mBAAoB,CACxC0E,MAfqBY,EAeImD,EAAKnD,GAd7B5B,GAAiBwE,IAAgC,IAAlBxE,KAC9BmH,EAAYnB,SAASpE,KAAOqF,EAAUjB,SAASpE,UAAnD,IAGSuF,EAAYnB,SAASpE,KAAO5B,IAA+B,IAAdwE,IAG/C,MAQL,sBAAuB2C,EAAYnB,SAASjB,EAAKnD,IACjD,uBACEuF,EAAYnB,SAASjB,EAAKnD,KAAOqF,EAAUjB,SAASjB,EAAKnD,KAAOuE,EAAmBH,SAASjB,EAAKnD,MALvG,UAQE,eAAC,IAAD,CAAMvF,UAAU,4BAA4B4H,GAAG,IAAI/C,QAAS,SAAAhD,GAAC,OAAIwJ,EAAgBxJ,EAAG6G,IAApF,UACGA,EAAKlI,KACN,sBAAMR,UAAU,2BAAhB,SAA4C+I,EAAEL,EAAKY,SAElDZ,EAAKa,OAASb,EAAKzH,UAClB,cAAC,IAAD,CAAOjB,UAAU,eAAeS,MAAOiI,EAAKa,MAAOtH,MAAI,EAAvD,SACGyG,EAAKzH,YAEN,QAIN,oBAAIjB,UAAU,eAAd,SACE,cAAC,IAAD,CAAUyL,OAASX,GAAeA,EAAYnB,SAASjB,EAAKnD,KAASqF,GAAaA,EAAUjB,SAASjB,EAAKnD,IAA1G,SACE,cAACmG,GAAD,2BACMpK,GADN,IAEEqK,MAAOjD,EAAKnC,SACZuE,YAAaA,EACbC,eAAgBA,EAChBjB,mBAAoBA,EACpBkB,sBAAuBA,EACvBJ,UAAWA,EACX1C,aAAcA,EACd2C,WAAYnC,EACZ/E,cAAeA,EACfwE,UAAWA,EACXQ,WAAYA,a,UC/ITiD,GATsB,SAAC,GAAc,IAAZlD,EAAW,EAAXA,KACtC,OACE,qBAAI1I,UAAU,oBAAd,UACE,+BAAO0I,EAAKmD,SACZ,cAAC,KAAD,CAAgB7L,UAAU,gCCyBjB8L,GApBc,SAAA1L,GAE3B,IAAM2L,EAAa,CACjBtD,sBACAkC,wBACAiB,iCAYF,OARuBxL,EAAMuL,MAAMxG,KAAI,SAACuD,EAAMrD,GAC5C,IAAM2G,EAAUD,EHd+B,SAAArD,GACjD,OAAIA,EAAKmD,OAAe,+BACpBnD,EAAKnC,SAAiB,uBACnB,sBGWsB0F,CAAwBvD,IACnD,OAAIA,EAAKnC,SACA0D,GAAiBvB,IAAS,cAACsD,EAAD,aAAStD,KAAMA,EAAMrD,MAAOA,GAAyBjF,GAAbsI,EAAKnD,IAEzEmF,GAAgBhC,IAAS,cAACsD,EAAD,aAAsCtD,KAAMA,GAAUtI,GAAxCsI,EAAKnD,IAAMmD,EAAKmD,YCoEnDK,GAnFC,SAAA9L,GAEd,IAAQuD,EAAwCvD,EAAxCuD,cAAewI,EAAyB/L,EAAzB+L,KAAMxN,EAAmByB,EAAnBzB,KAAMyN,EAAahM,EAAbgM,SAGnC,EAAkCvM,mBAAS,IAA3C,mBAAO+K,EAAP,KAAkB1C,EAAlB,KACA,EAAsCrI,mBAAS,IAA/C,mBAAOiL,EAAP,KAAoBC,EAApB,KACA,EAAoDlL,mBAAS,IAA7D,mBAAOiK,EAAP,KAA2BkB,EAA3B,KACA,EAAoCnL,mBAAS,MAA7C,mBAAO8I,EAAP,KAAmB0D,EAAnB,KAGA,EAAkCxM,oBAAS,GAA3C,mBAAOsI,EAAP,KAAkBmE,EAAlB,KAGMC,EAAYC,iBAAO,MAoBzB,OACE,cAAC,WAAD,UACE,qBACExM,UAAWC,IAAW,kDAAmD,CACvEwM,SAAUtE,IAA+B,IAAlBxE,EACvB,aAAuB,cAAThF,GAAiC,SAATA,EACtC,YAAsB,cAATA,GAAiC,SAATA,IAEvC+N,aAzBe,WACnBJ,GAAa,IAyBTK,aAAc,kBAAML,GAAa,IAPnC,SASGH,EACCA,EAAK,eAAK/L,IAEV,eAAC,WAAD,WAEE,cAAC,EAAD,aAAoB8H,aAAcA,EAAcC,UAAWA,GAAe/H,IAE1E,qBAAKJ,UAAU,gBAAgBK,IAAKkM,IAEpC,cAAC,IAAD,CACEvM,UAAU,oBACV8E,QAAS,CAAEC,kBAAkB,GAC7B6H,UAAW,SAAAC,GAAS,OAnCb,SAAAA,GACbN,GAAaM,EAAUC,UAAY,EAChCP,EAAUQ,QAAQtO,UAAUuO,SAAS,YACxCT,EAAUQ,QAAQtO,UAAUG,IAAI,WAG9B2N,EAAUQ,QAAQtO,UAAUuO,SAAS,YACvCT,EAAUQ,QAAQtO,UAAUC,OAAO,WA4BLuO,CAAWJ,IAHrC,SAKE,oBAAI7M,UAAU,6BAAd,SACE,cAAC0L,GAAD,CACEC,MAAOS,EACPA,SAAUA,EACVjE,UAAWA,EACXyC,UAAWA,EACXjC,WAAYA,EACZmC,YAAaA,EACb5C,aAAcA,EACdvE,cAAeA,EACf0I,cAAeA,EACftB,eAAgBA,EAChBjB,mBAAoBA,EACpBkB,sBAAuBA,gBC5E5BkC,GAAS,WAEpB,IAAMpP,EAAWC,cACXmF,EAAQjF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOgP,SAmBhD,OAZA/O,qBAAU,WAER,IAAMC,EAAUE,SAAS6O,qBAAqB,QAAQ,GAGlDlK,EACF7E,EAAQgP,aAAa,MAAO,OAE5BhP,EAAQgP,aAAa,MAAO,SAE7B,CAACnK,IAEG,CAACA,EAhBS,SAAA9D,GACftB,EAASwP,YAAUlO,O,oBCVVmO,GAAgB,WAE3B,IAAMzP,EAAWC,cAOjB,MAAO,CAAEsF,WANKpF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAMdkF,WAAYQ,cAJjB,SAAA7E,GACpBlB,EAAS0P,YAAiBxO,OCNjByO,GAAgB,WAE3B,IAAM3P,EAAWC,cAOjB,MAAO,CAAE+F,cAJa,SAAA9E,GACpBlB,EAAS4P,YAAiB1O,KAGJsE,WANVrF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAMCmF,aCT/BqK,GAAiB,WAE5B,IAAM7P,EAAWC,cAQjB,MAAO,CAAEyF,YAPKvF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAObqF,YAAaO,eAJlB,SAAA3E,GACrBtB,EAAS8P,YAAkBxO,OCPlByO,GAAsB,WAEjC,IAAM/P,EAAWC,cAOjB,MAAO,CAAEwF,WANKtF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAMd2P,iBAAkBlK,cAJvB,SAAA5E,GACpBlB,EAASiQ,YAAuB/O,OCiOrBgP,I,cApMQ,SAAA5N,GAErB,IAAQ+L,EAA6C/L,EAA7C+L,KAAM8B,EAAuC7N,EAAvC6N,OAAQC,EAA+B9N,EAA/B8N,OAAQ3H,EAAuBnG,EAAvBmG,SAAU6F,EAAahM,EAAbgM,SAGxC,EAA0Bc,KAA1B,mBAAOhK,EAAP,KAAcC,EAAd,KACA,EAA0BtF,eAAlBc,EAAR,EAAQA,KAAMI,EAAd,EAAcA,QACd,EAAsCwO,KAA9BlK,EAAR,EAAQA,WAAYQ,EAApB,EAAoBA,cACpB,EAAsC4J,KAA9BnK,EAAR,EAAQA,WAAYQ,EAApB,EAAoBA,cACpB,EAAwC6J,KAAhCnK,EAAR,EAAQA,YAAaO,EAArB,EAAqBA,eACrB,EAA6C7E,eAArCf,EAAR,EAAQA,OAAQgB,EAAhB,EAAgBA,UAAWO,EAA3B,EAA2BA,cAC3B,EAAsCmO,KAA9BtK,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,cAGpB,EAAkC/D,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CF,oBAAS,GAArD,mBAAOsO,EAAP,KAAuBlG,EAAvB,KACA,EAAsCpI,mBAASvB,OAAOiB,YAAtD,mBAAO6O,GAAP,KAAoBC,GAApB,KAGMvQ,GAAWC,cACXuQ,GAAcrQ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAGzCoQ,GAAoB,WACxBF,GAAe/P,OAAOiB,aAIlB0L,GAAWC,cACX9H,GAAWkL,GAAYE,WACvB9K,GAAe4K,GAAY5K,aAC3BC,GAAgB2K,GAAY3K,cAG5BM,GAAmB,SAAAwK,GAAG,OAAI3Q,GAAS4Q,YAAoBD,KAS7DrQ,qBAAU,WACJ+P,GAAkBC,GAAc,MAClCnG,GAAkB,KAEnB,CAACgD,KAGJ7M,qBAAU,gBACOmD,IAAXjD,QACFA,OAAOkB,iBAAiB,SAAU+O,MAEnC,CAACH,KAGJhQ,qBAAU,WAER,OADA2B,GAAa,GACN,kBAAMA,GAAa,MACzB,IAGH,IAAM4O,GAAgB,CACpBC,OAAQ,gBACRC,OAAQ,eACRC,OAAQ,iBAUJC,GAAgB,CACpBC,SAA2B,UAAjBtL,GAA2B,6BAA+B,eACpEmL,OAAQ,YACRD,OAAQ,oBACRE,OAAQ,UAGJG,GAAmC,KAAhBzL,GAAsC,UAAhBA,GAA2C,UAAhBA,EAE1E,OAAK1D,EAIH,8CACEE,UAAWC,IAAW,2BAAD,OArBI,CAC3B+O,SAAU,kBACVH,OAAQ,gBACRD,OAAQ,gBACRE,OAAQ,iBAkB4CzL,IAAe,kBAD5C,YAEjBsL,GAAcrL,IAAe,iBAE/B,CAEE,uBAAwB8K,IAAe,KACvC,iBAAkBzK,IAAiByK,IAAe,KAClD,iBAAkBzK,IAAiByK,GAAc,KAGjD,wBAAyBA,GAAc,KACvC,aAAcD,GAAkBC,GAAc,KAC9C,YAAaD,GAAkBC,GAAc,QAG5ChL,GAAW,CAAE,WAAY,YAAe,IAjB/C,cAmBIA,GAUE,KATF,cAAC,GAAD,CACEzE,KAAMA,EACNwN,KAAMA,EACNC,SAAUA,EACVzI,cAAeA,GACfwK,eAAgBA,EAChBlK,iBAAkBA,GAClBgE,kBAAmBA,IAIvB,cAAC,IAAD,CACEiH,OAAO,KACPrC,WAAW,EACXsC,MAAgB,SAATxQ,EACPE,KAAe,SAATF,GAAmBsQ,GACzBxO,MAAOwO,GAAmBzL,OAAcjC,EACxCvB,UAAWC,IAAW,2CAAD,OACwB8O,GAAc1L,IAAe,eADrD,mBANvB,SAUE,qBAAKrD,UAAU,kCAAf,SACGiO,EACCA,EAAO,CAAEtP,OAAMI,UAASkJ,sBAExB,cAAC,EAAD,CAAiBA,kBAAmBA,EAAmBtJ,KAAMA,EAAMI,QAASA,QAIjFwH,EAGD,qBACEvG,UAAWC,IAAW,kBAAmB,CACvCmP,KAAMjB,IAERtJ,QAAS,kBAAMoD,GAAkB,OAIA,IAAlCK,IAAYnK,OAAOkR,WAClB,cAAC,EAAD,CACE1Q,KAAMA,EACNuE,MAAOA,EACP/E,OAAQA,EACRY,QAASA,EACToE,SAAUA,EACVC,SAAUA,GACVjE,UAAWA,EACXmE,WAAYA,EACZD,WAAYA,EACZE,WAAYA,EACZE,YAzHY,SAAAgL,GAAG,OAAI3Q,GAASwR,YAAiBb,KA0H7CnG,YAAaA,IACb9E,YAAaA,EACbE,aAAcA,GACdE,cAAeA,EACfE,cAAeA,EACfD,cAAeA,EACfnE,cAAeA,EACfiE,cAAeA,GACfI,eAAgBA,EAChBC,gBAtIgB,SAAAyK,GAAG,OAAI3Q,GAASyR,YAAmBd,KAuInDxK,iBAAkBA,KAElB,KACJ,wBACEjE,UAAWC,IAAW,uBAAD,OAAwB0O,GAAcrL,IAAe,iBAAmB,CAC3F,SAAyB,WAAfA,IAFd,SAKG4K,GAAkB,cAAC,EAAD,CAAiB5K,WAAYA,EAAYqL,cAAeA,QAG3C,IAAjCrG,IAAYnK,OAAO2O,UAClB,qBAAK9M,UAAU,gBAAf,SACE,cAAC,EAAD,CAAaqG,WAAY,IAAKrG,UAAU,qBAAxC,SACE,cAAC,IAAD,CAAQA,UAAU,WAAWS,MAAM,UAAnC,SACE,cAAC,IAAD,CAASF,KAAM,WAInB,SAzGC,O,8BC1HI,IACb,CACEsL,OAAQ,QAEV,CACEtG,GAAI,WACJ+D,MAAO,WACP9I,KAAM,cAAC,KAAD,CAASD,KAAM,KACrB4I,QAAS,oBAEX,CACE5D,GAAI,SACJ+D,MAAO,SACP9I,KAAM,cAAC,KAAD,CAASD,KAAM,KACrB4I,QAAS,kBAEX,CACE5D,GAAI,OACJ+D,MAAO,OACP9I,KAAM,cAAC,KAAD,CAAOD,KAAM,KACnB4I,QAAS,iB,UCpBE,IAEb,CACE5D,GAAI,UACJ+D,MAAO,UACP9I,KAAM,cAAC,KAAD,CAASD,KAAM,KACrB4I,QAAS,kBCNC,yBAAKqG,IAAnB,YAA4BC,KCsBbzB,GAfQ,SAAA5N,GAQrB,OACE,cAAC,GAAD,yBAAQgM,SAAUsD,IAAgBtP,GAAlC,aACE,cAAC,IAAD,Q,SC8CSuP,GA3De,SAAC,GAAoC,IAAlCjH,EAAiC,EAAjCA,KAAMkH,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAExCjH,EAAUF,EAAKG,aAAe,IAAMC,IAGlCC,EAAMC,cAAND,EAQR,OACE,oBACElE,QARgB,WACdgL,GACFA,GAAY,IAOZ7P,UAAWC,IAAW,WAAY,CAChCgJ,SAAUP,EAAKO,WAHnB,SAME,eAACL,EAAD,yBACE5I,UAAWC,IAAW,4BAA6B,CACjD,gBAAiB2P,EACjB,YAAaA,IAEf3I,OAAQyB,EAAKU,OAAS,cAAW7H,IAEN,IAAtBmH,EAAKG,aACN,CACEjE,KAAM8D,EAAKS,SAAW,KAExB,CACEvB,GAAIc,EAAKS,SAAW,IACpBnJ,UAAW,YAAmB,IACtB8P,EAAc,4BACpB,OAF2B,EAAfzG,WAEKX,EAAKO,UAA6B,MAAjBP,EAAKS,QAE7B,GAAN,OAAU2G,EADRF,EACF,wBAEA,oBAIM,GAAN,OAAUE,EADRF,EACF,iBAEA,gBAzBd,cAgCGlH,EAAKlI,KACN,+BAAOuI,EAAEL,EAAKY,gB,SC1ChByG,GAAc,CAClBC,SAAS,EACT/K,KAAM,cACNgL,MAAO,cACPC,GAAI,SAAAC,GACF,IAIeC,EAJTC,EAAa/R,OAAOgS,YACxBC,EAAWJ,EAAKjS,MAAMsS,SAASC,OAC/BC,EAAQH,EAASI,wBAAwB/J,IAIvCyJ,EAAaK,EAHJH,EAASK,aAGc,GAAK,IAEvCR,EAAY,CACVS,UAFUR,EAAaK,EAAQ,GAG/BI,UAAW,SAGf,IAAMC,EAAQR,EAASI,wBAEnBI,EAAMC,KAAOD,EAAM1O,OAAS/D,OAAOiB,WAAa,KAAO,GACzDgR,EAASU,QAAQ,aAAaxS,UAAUG,IAAI,YAE9CuR,EAAKjS,MAAMgT,OAAOT,OAAlB,2BAAgCN,EAAKjS,MAAMgT,OAAOT,QAAWL,KAqFlDe,GAjFgB,SAAA/Q,GAE7B,IAAQsI,EAA2BtI,EAA3BsI,KAAM0I,EAAqBhR,EAArBgR,QAASxB,EAAYxP,EAAZwP,QAGvB,EAAgC/P,oBAAS,GAAzC,mBAAOwR,EAAP,KAAiBxB,EAAjB,KACA,EAA0ChQ,mBAAS,MAAnD,mBAAOyR,EAAP,KAAsBC,EAAtB,KACA,EAAgD1R,mBAAS,MAAzD,mBAAO2R,EAAP,KAAyBC,EAAzB,KAGA,EAAgBvE,KAAThK,EAAP,oBAGMwO,EAAyBxO,EAAQ,IAAM,GACvCyO,EAAkBzO,EAAQ,aAAe,eACzC0O,EAAyB1O,EAAQ,aAAe,cAG9C6F,EAAMC,cAAND,EACFoC,EAAaD,cAAcE,SACjC,EAAuCyG,aAAUL,EAAkBF,EAAe,CAChFQ,UAAWlC,EAAUgC,EAAyBD,EAC9CI,UAAW,CACThC,GACA,CACEC,SAAS,EACT/K,KAAM,SACNH,QAAS,CACPkN,OAAQpC,EAAU,EAAE,EAAG,IAAM,CAAC8B,EAAwB,QARtDO,EAAR,EAAQA,OAAQf,EAAhB,EAAgBA,OAAQgB,EAAxB,EAAwBA,WAmBxB,OACE,qBACE7R,IAAKoR,EACL/E,aARqB,WACvBmD,GAAY,GACZoC,KAOEtF,aAAc,kBAAMkD,GAAY,IAChC7P,UAAWC,IAAW,WAAY,CAChCmP,KAAMiC,EACN,YAAwB,IAAZD,EACZ,oBAAgC,IAAZA,EACpB,8BAA+B5H,EAAed,EAAMyC,KARxD,UAWE,eAAC,IAAD,CACEvD,GAAG,IACH/C,QAAS,SAAAhD,GAAC,OAAIA,EAAEwC,kBAChBrE,UAAWC,IAAW,4CAA6C,CACjE,iBAA6B,IAAZmR,EACjB,YAAwB,IAAZA,IALhB,UAQG1I,EAAKlI,KACN,+BAAOuI,EAAEL,EAAKY,YAEhB,4CACEjJ,IAAKkR,EACL/P,MAAK,eAAO0P,EAAOT,SACfyB,EAAWzB,QAHjB,IAIEzQ,UAAWC,IAAW,gBAAiB,CAAE,eAA2B,IAAZmR,IAJ1D,SAME,cAAC,GAAD,CACExB,SAAS,EACTwB,SAAS,EACTvG,WAAYnC,EACZ2I,SAAUA,EACV1F,MAAOjD,EAAKnC,SACZsJ,YAAaA,WC3FRsC,GAnBgB,SAAA/R,GAE7B,IAAM2L,EAAa,CACjBoF,0BACAxB,0BAYF,OARuBvP,EAAMuL,MAAMxG,KAAI,SAACuD,EAAMrD,GAC5C,IAAM2G,EAAUD,EjBAiC,SAAArD,GACnD,OAAIA,EAAKnC,SAAiB,yBACnB,wBiBFsB0F,CAAwBvD,IACnD,OAAIA,EAAKnC,SACA0D,GAAiBvB,IAAS,cAACsD,EAAD,aAAStD,KAAMA,EAAMrD,MAAOA,GAAyBjF,GAAbsI,EAAKnD,IAEzEmF,GAAgBhC,IAAS,cAACsD,EAAD,aAAStD,KAAMA,EAAMrD,MAAOA,GAAyBjF,GAAbsI,EAAKnD,QCTlE6M,GAVQ,SAAC,GAAkB,IAAhBhG,EAAe,EAAfA,SACxB,OACE,qBAAKpM,UAAU,qCAAf,SACE,oBAAIA,UAAU,iBAAiBuF,GAAG,uBAAlC,SACE,cAAC,GAAD,CAAwB6L,SAAS,EAAOzF,MAAOS,SC0MxCiG,I,OA3KU,SAAAjS,GAAU,IAAD,EAExB6N,EAA6C7N,EAA7C6N,OAAQ7B,EAAqChM,EAArCgM,SAAU8B,EAA2B9N,EAA3B8N,OAAQ3H,EAAmBnG,EAAnBmG,SAAU4F,EAAS/L,EAAT+L,KAG5C,EAA0BtO,eAAlBc,EAAR,EAAQA,KAAMI,EAAd,EAAcA,QACd,EAA0BmO,KAA1B,mBAAOhK,EAAP,KAAcC,EAAd,KACA,EAAsCoK,KAA9BlK,EAAR,EAAQA,WAAYQ,EAApB,EAAoBA,cACpB,EAAsC4J,KAA9BnK,EAAR,EAAQA,WAAYQ,EAApB,EAAoBA,cACpB,EAAwC6J,KAAhCnK,EAAR,EAAQA,YAAaO,EAArB,EAAqBA,eACrB,EAA6C7E,eAArCf,EAAR,EAAQA,OAAQgB,EAAhB,EAAgBA,UAAWO,EAA3B,EAA2BA,cAC3B,EAAsCmO,KAA9BtK,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,cAGpB,EAAkC/D,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CF,oBAAS,GAArD,mBAAOyS,EAAP,KAAuBC,EAAvB,KAGMzU,EAAWC,cACXuQ,GAAcrQ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAGzCuF,GAAe4K,GAAY5K,aAC3BN,GAAWkL,GAAYE,WAe7BpQ,qBAAU,WAUR,OATA2B,GAAa,GACbzB,OAAOkB,iBAAiB,UAAU,WAC5BlB,OAAOoI,YAAc,KAAyB,IAAnB4L,GAC7BC,GAAkB,GAEhBjU,OAAOoI,YAAc,IACvB6L,GAAkB,MAGf,kBAfPxS,GAAa,QACbwS,GAAkB,MAejB,IAGH,IAAM5D,GAAgB,CACpBC,OAAQ,gBACRC,OAAQ,eACRC,OAAQ,iBASJC,GAAgB,CACpBC,SAA2B,UAAjBtL,GAA2B,6BAA+B,eACpEmL,OAAQ,aAGJI,GAAmC,KAAhBzL,GAAsC,UAAhBA,GAA2C,UAAhBA,EAE1E,OAAK1D,EAKH,8CACEE,UAAWC,IAAW,6CAAD,OAnBI,CAC3B+O,SAAU,kBACVH,OAAQ,gBACRD,OAAQ,iBAiB8DvL,IAAe,kBAD9D,YACmFsL,GAAcrL,IAAe,gBADhH,oBAIhBF,GAAW,CAAE,WAAY,YAAe,IAL/C,cAOE,eAAC,IAAD,CACE8L,OAAO,KACPrC,WAAW,EACX7M,UAAWC,IAAW,kFAAmF,CACvG,kBAAmBqS,IAJvB,WAOIrE,GACA,qBAAKjO,UAAU,kCAAf,SACE,oBAAIA,UAAU,iBAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAM4H,GAAG,IAAI5H,UAAU,eAAvB,UACE,sBAAMA,UAAU,eAGhB,oBAAIA,UAAU,kBAAd,SAAiCsI,IAAYC,IAAIC,mBAO3D,qBAAKxI,UAAU,kCAAf,SACGiO,EAASA,EAAO,CAAEtP,OAAMI,YAAa,cAAC,EAAD,CAAiBJ,KAAMA,EAAMI,QAASA,SAG9EqE,GAeE,KAdF,qBAAKpD,UAAU,0BAAf,SACE,cAAC,IAAD,CACEc,IAAI,MACJoO,OAAO,KACPC,MAAgB,SAATxQ,EACPE,KAAe,SAATF,GAAmBsQ,GACzBjP,UAAWC,IAAW,6DAAD,oBAClB8O,GAAc1L,GAA6B,WAAfA,GADV,eAEnB,gBAAkB0L,GAAc1L,IAA8B,WAAfA,GAA2C,aAAfA,GAFxD,IALvB,SAUG8I,EAAOA,EAAK,CAAEC,WAAUoG,wBAAaC,sCAAuB,cAAC,GAAD,CAAerG,SAAUA,QAK3F7F,GACkC,IAAlC+B,IAAYnK,OAAOkR,WAClB,cAAC,EAAD,CACE1Q,KAAMA,EACNuE,MAAOA,EACP/E,OAAQA,EACRY,QAASA,EACToE,SAAUA,EACVC,SAAUA,GACVjE,UAAWA,EACXmE,WAAYA,EACZD,WAAYA,EACZE,WAAYA,EACZE,YA9GY,SAAAgL,GAAG,OAAI3Q,EAASwR,YAAiBb,KA+G7CnG,YAAaA,IACb9E,YAAaA,EACbE,aAAcA,GACdE,cAAeA,EACfE,cAAeA,EACfD,cAAeA,EACfnE,cAAeA,EACfqE,eAAgBA,EAChBC,gBA1HgB,SAAAyK,GAAG,OAAI3Q,EAASyR,YAAmBd,OA4HnD,KACJ,wBACEzO,UAAWC,IAAW,uBAAD,OAAwB0O,GAAcrL,IAAe,iBAAmB,CAC3F,SAAyB,WAAfA,IAFd,SAKG4K,GAAkB,cAAC,EAAD,CAAiB5K,WAAYA,EAAYqL,cAAeA,QAG3C,IAAjCrG,IAAYnK,OAAO2O,UAClB,qBAAK9M,UAAU,gBAAf,SACE,cAAC,EAAD,CAAaqG,WAAY,IAAKrG,UAAU,qBAAxC,SACE,cAAC,IAAD,CAAQA,UAAU,WAAWS,MAAM,UAAnC,SACE,cAAC,IAAD,CAASF,KAAM,WAInB,SA/FC,O,gFCpGIiP,GCIA,CACb,CACEjK,GAAI,OACJ+D,MAAO,OACP9I,KAAM,cAAC,KAAD,IACN+F,SAAU,CACR,CACEhB,GAAI,QACJ+D,MAAO,QACP9I,KAAM,cAAC,KAAD,IACN2I,QAAS,eAEX,CACE5D,GAAI,OACJ+D,MAAO,OACP9I,KAAM,cAAC,KAAD,IACN2I,QAAS,cAEX,CACE5D,GAAI,OACJ+D,MAAO,OACP9I,KAAM,cAAC,KAAD,IACN2I,QAAS,cAEX,CACE5D,GAAI,WACJ+D,MAAO,WACP9I,KAAM,cAAC,KAAD,IACN2I,QAAS,kBAEX,CACE5D,GAAI,aACJ+D,MAAO,UACP9I,KAAM,cAAC,KAAD,IACN+F,SAAU,CACR,CACEhB,GAAI,cACJ+D,MAAO,OACP9I,KAAM,cAAC,IAAD,IACN2I,QAAS,sBAEX,CACE5D,GAAI,iBACJ+D,MAAO,UACP9I,KAAM,cAAC,IAAD,IACN2I,QAAS,yBAEX,CACE5D,GAAI,cACJ+D,MAAO,OACP9I,KAAM,cAAC,IAAD,IACN2I,QAAS,sBAEX,CACE5D,GAAI,aACJ+D,MAAO,MACP9I,KAAM,cAAC,IAAD,IACN2I,QAAS,uBAIf,CACE5D,GAAI,oBACJ+D,MAAO,sBACP9I,KAAM,cAAC,KAAD,CAAQD,KAAM,KACpBgG,SAAU,CACR,CACEhB,GAAI,QACJ+D,MAAO,QACP9I,KAAM,cAAC,IAAD,CAAQD,KAAM,KACpB4I,QAAS,eAEX,CACE5D,GAAI,cACJ+D,MAAO,cACP9I,KAAM,cAAC,IAAD,CAAQD,KAAM,KACpB4I,QAAS,uBAIf,CACE5D,GAAI,YACJ+D,MAAO,YACP9I,KAAM,cAAC,KAAD,IACN+F,SAAU,CACR,CACEhB,GAAI,OACJ+D,MAAO,OACP9I,KAAM,cAAC,IAAD,IACN2I,QAAS,wBAEX,CACE5D,GAAI,SACJ+D,MAAO,UACP9I,KAAM,cAAC,IAAD,IACN2I,QAAS,kCAEX,CACE5D,GAAI,WACJ+D,MAAO,YACP9I,KAAM,cAAC,IAAD,IACN2I,QAAS,4BAEX,CACE5D,GAAI,WACJ+D,MAAO,WACP9I,KAAM,cAAC,IAAD,IACN2I,QAAS,8BAIf,CACE5D,GAAI,QACJ+D,MAAO,OACP9I,KAAM,cAAC,IAAD,IACN+F,SAAU,CACR,CACEhB,GAAI,OACJ+D,MAAO,OACP9I,KAAM,cAAC,IAAD,IACN2I,QAAS,mBAEX,CACE5D,GAAI,OACJ+D,MAAO,OACP9I,KAAM,cAAC,IAAD,IACN2I,QAAS,wBCnHNkJ,GAfU,SAAAjS,GAQvB,OACE,cAAC,GAAD,yBAAQgM,SAAUsD,IAAgBtP,GAAlC,aACE,cAAC,IAAD,QCPAsS,I,OAAgB,SAAAtS,GAAU,IAAD,EAErBmG,EAAwBnG,EAAxBmG,SAAUoM,EAAcvS,EAAduS,UAGZ7U,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,KAE7B0U,EAAc5U,EAAMiQ,OACpB4E,EAAe7U,EAAMG,OAAOA,OAC5BuF,EAAe1F,EAAMG,OAAOuF,aAC5BH,EAAavF,EAAMG,OAAO2P,iBAE1BgF,EACqB,eAAxBD,EAAa1U,SAA4BwU,GACjB,eAAxBE,EAAa1U,QAA2BwU,IAAcA,EAAUI,UAC7DlS,EAAMiS,EAAqB,MAAQE,WAiCzC,OAfA5U,qBAAU,WAYR,OAXIuU,IACEA,EAAUjP,cACZ5F,EAASyR,YAAmBoD,EAAUjP,eAEpCiP,EAAUhP,eACZ7F,EAAS4Q,YAAoBiE,EAAUhP,gBAErCgP,EAAUnE,YACZ1Q,EAASwR,YAAiBqD,EAAUnE,cAGjC,WA1BHmE,IACEA,EAAUjP,cACZ5F,EAASyR,YAAmB,SAE1BoD,EAAUhP,eACZ7F,EAAS4Q,aAAqBiE,EAAUhP,gBAEtCgP,EAAUnE,YACZ1Q,EAASwR,aAAkBqD,EAAUnE,iBAmBxC,CAACmE,IAGF,sBACE3S,UAAWC,IAAW,uCAAD,oBAClB0S,EAAYA,EAAU3S,UAAY,GAAK2S,GAAaA,EAAU3S,WAD5C,eAEnB,eAAgB4S,EAAYK,MAAMtW,QAFf,IADvB,UAME,qBAAKqD,UAAU,oBACf,qBAAKA,UAAU,yBACf,qBACEA,UAAWC,IAAW,cACpB,kBAAmB0S,IAAcA,EAAUI,UAC3C,uBAAwBJ,GAAaA,EAAUI,UAC/C,oBAAsC,UAAjBrP,GAHF,qCAIYH,GAA8B,SAAfA,GAAyBA,EAAW5G,SALtF,SAQE,cAACkE,EAAD,2BAAUiS,EAAqB,CAAE9S,UAAW,gBAAmB,IAA/D,aAAqEuG,YAM9D2M,kBAAKR,IChELS,GAdK,SAAC,GAAyB,IAAvB5M,EAAsB,EAAtBA,SAAU6M,EAAY,EAAZA,MAC/B,GAAIA,EAAO,CACT,IAAMhL,EAAOrL,cAEPsW,EAAkBD,EAAME,MAAQF,EAAME,KAAKC,WAEjD,GAAInL,GAAQiL,EACV,OAAO,cAAC,IAAD,CAAUzL,GAAI1K,YAA4BkL,EAAKX,QAI1D,OAAO,cAAC,WAAD,CAAU+L,SAAU,KAApB,SAA2BjN,KCqBrBkN,GAhCM,SAAC,GAAyB,IAAvBlN,EAAsB,EAAtBA,SAAU6M,EAAY,EAAZA,MAE1BlJ,EAAUC,qBAAWC,KACrBhC,EAAOpL,KAAKC,MAAMJ,aAAaC,QAAQ,aAE7C,GAAIsW,EAAO,CACT,IAAI5I,EAAS,KACTC,EAAW,KACX4I,GAAkB,EAOtB,GALID,EAAME,OACR9I,EAAS4I,EAAME,KAAK9I,OACpBC,EAAW2I,EAAME,KAAK7I,SACtB4I,EAAkBD,EAAME,KAAKC,aAE1BnL,EACH,OAAO,cAAC,IAAD,CAAUR,GAAG,WAEtB,GAAIQ,GAAQiL,EACV,OAAO,cAAC,IAAD,CAAUzL,GAAG,MAEtB,GAAIQ,GAAQiL,GAAiC,WAAdjL,EAAKX,KAClC,OAAO,cAAC,IAAD,CAAUG,GAAG,oBAEtB,GAAIQ,IAAS8B,EAAQK,IAAIC,GAAU,OAAQC,GACzC,OAAO,cAAC,IAAD,CAAU7C,GAAG,uBAAuB8L,SAAO,IAItD,OAAO,cAAC,WAAD,CAAUF,SAAU,KAApB,SAA2BjN,KCf9BoN,GAAY,CAChBC,MAAO,cAAChU,EAAA,EAAD,IACPiU,SAAU,cAAC,GAAD,IACVC,WAAY,cAAC,GAAD,KAOR1W,GAAe,mBAGf2W,GAAM,sBAAOlR,GAAP,YAAwBmR,IAa9BC,GAAoB,SAAC9V,EAAQ+V,GACjC,IAAMC,EAAe,GAsCrB,OApCIJ,IACFA,GAAOK,QAAO,SAAAhB,GACZ,IAAIiB,GAAU,EAEd,GACGjB,EAAME,MAAQF,EAAME,KAAKnV,QAAUiV,EAAME,KAAKnV,SAAWA,SACzCoD,IAAf6R,EAAME,WAA4C/R,IAAtB6R,EAAME,KAAKnV,SAAyB+V,IAAkB/V,EACpF,CACA,IAAImW,EAAWb,GAOf,GAJIL,EAAME,OACyBe,EAAX,UAAtBjB,EAAME,KAAKnV,OACXmW,EAAWlB,EAAME,KAAKiB,YAAcpB,GAAcM,IAEhDL,EAAM/U,QAAS,CACjB,IAAMmW,EAEJjY,YAAW6W,EAAM/U,QAAQ+B,SAAsB,IAAZiU,EAEjC3B,GACEM,WAENI,EAAM/U,QACJ,cAACmW,EAAD,4BAA0B,IAAZH,EAtCL,SAAAjB,GACnB,GAAI7W,YAAW6W,EAAM/U,QAAQ+B,OAC3B,OAAIgT,EAAME,KACD,CAAEX,UAAWS,EAAME,MAEnB,GAiCiCmB,CAAarB,GAAS,IAAxD,aACE,cAACkB,EAAD,CAAUlB,MAAOA,EAAjB,SAAyBA,EAAM/U,aAMrC8V,EAAarS,KAAKsR,GAEpB,OAAOe,KAGJA,GAGHO,GAAY,SAAAvW,GAChB,IAAM+V,EAAgB/V,GAAU,WAG1BwW,EAAY,GAWlB,MAbgB,CAAC,WAAY,aAAc,SAInC/S,SAAQ,SAAAgT,GACd,IAAMT,EAAeF,GAAkBW,EAAYV,GAEnDS,EAAU7S,KAAK,CACbgB,KAAM,IACNzE,QAASsV,GAAUiB,IAAejB,GAAUO,GAC5C3N,SAAU4N,OAGPQ,I,4LC3FHE,EAAQrS,gBAAK,kBAAM,wDACnBsS,EAAQtS,gBAAK,kBAAM,gEACnBuS,EAAgBvS,gBAAK,kBAAM,wDAuClBwS,EArCA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAkChB,OAxBeC,YAAU,CACvB,CACEpS,KAAM,IACNuC,OAAO,EACPhH,QAAS,cAAC,IAAD,CAAUqV,SAAO,EAAC9L,GAbV,WACnB,IAAMQ,EAAOrL,cACb,OAAIqL,EACKlL,YAA4BkL,EAAKX,MAEjC,SAQwB0N,MAEjC,CACErS,KAAM,SACNzE,QAAS,cAACuB,EAAA,EAAD,IACT2G,SAAU,CAAC,CAAEzD,KAAM,SAAUzE,QAAS,cAACyW,EAAD,OAExC,CACEhS,KAAM,iBACNzE,QAAS,cAACuB,EAAA,EAAD,IACT2G,SAAU,CAAC,CAAEzD,KAAM,iBAAkBzE,QAAS,cAAC0W,EAAD,OAEhD,CACEjS,KAAM,IACNzE,QAAS,cAACuB,EAAA,EAAD,IACT2G,SAAU,CAAC,CAAEzD,KAAM,IAAKzE,QAAS,cAACwW,EAAD,QAnBb,mBAqBnBI,M,kBCpBQG,UAjBH,WACV,MAAkCvV,mBAAS,IAA3C,mBAAOoV,EAAP,KAAkBI,EAAlB,KAGQlX,EAAWe,cAAXf,OAMR,OAJAC,qBAAU,WACRiX,EAAaX,YAAUvW,MACtB,CAACA,IAGF,cAAC,WAAD,CAAUqV,SAAU,KAApB,SACE,cAAC,EAAD,CAAQyB,UAAWA","file":"static/js/6.3fe6aec2.chunk.js","sourcesContent":["import { DefaultRoute } from '../router/routes'\r\n\r\n// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return DefaultRoute\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store Imports\r\nimport { handleSkin } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useSkin = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setSkin = type => {\r\n    dispatch(handleSkin(type))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (store.skin !== 'light') {\r\n      element.classList.add(classNames[store.skin])\r\n    }\r\n  }, [store.skin])\r\n\r\n  return { skin: store.skin, setSkin }\r\n}\r\n","//** React Imports\r\n// import { useEffect, useCallback } from 'react'\r\n\r\n// ** Store Imports\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { handleLayout, handleLastLayout } from '@store/layout'\r\n\r\nexport const useLayout = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setLayout = value => {\r\n    dispatch(handleLayout(value))\r\n  }\r\n\r\n  const setLastLayout = value => {\r\n    dispatch(handleLastLayout(value))\r\n  }\r\n\r\n  // const handleLayoutUpdate = useCallback(() => {\r\n  //   // ** If layout is horizontal & screen size is equals to or below 1200\r\n  //   if (store.layout === 'horizontal' && window.innerWidth <= 1200) {\r\n  //     setLayout('vertical')\r\n  //     setLastLayout('horizontal')\r\n  //   }\r\n  //   // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n  //   if (store.lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n  //     setLayout('horizontal')\r\n  //   }\r\n  // }, [])\r\n\r\n  // // ** ComponentDidMount\r\n  // useEffect(() => {\r\n  //   handleLayoutUpdate()\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //   // ** Window Resize Event\r\n  //   window.addEventListener('resize', handleLayoutUpdate)\r\n  // }, [store.layout, store.lastLayout])\r\n\r\n  if (window) {\r\n    const breakpoint = 1200\r\n\r\n    if (window.innerWidth < breakpoint) {\r\n      setLayout('vertical')\r\n    }\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (window.innerWidth <= breakpoint && store.lastLayout !== 'vertical' && store.layout !== 'vertical') {\r\n        setLayout('vertical')\r\n      }\r\n      if (window.innerWidth >= breakpoint && store.lastLayout !== store.layout) {\r\n        setLayout(store.lastLayout)\r\n      }\r\n    })\r\n  }\r\n\r\n  return { layout: store.layout, setLayout, lastLayout: store.lastLayout, setLastLayout }\r\n}\r\n","// ** React Imports\r\nimport { Outlet } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\nconst BlankLayout = () => {\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n\r\n  // ** Hooks\r\n  const { skin } = useSkin()\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('blank-page', {\r\n        'dark-layout': skin === 'dark'\r\n      })}\r\n    >\r\n      <div className='app-content content'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlankLayout\r\n","// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    img,\r\n    size,\r\n    icon,\r\n    color,\r\n    status,\r\n    badgeUp,\r\n    content,\r\n    tag: Tag,\r\n    initials,\r\n    imgWidth,\r\n    className,\r\n    badgeText,\r\n    imgHeight,\r\n    badgeColor,\r\n    imgClassName,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  icon: Proptypes.node,\r\n  src: Proptypes.string,\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  badgeText: Proptypes.string,\r\n  className: Proptypes.string,\r\n  imgClassName: Proptypes.string,\r\n  contentStyles: Proptypes.object,\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n","import { lazy } from 'react'\r\n\r\nconst Settings = lazy(() => import('../../views/custom/settings'))\r\nconst Proudcts = lazy(() => import('../../views/custom/products'))\r\nconst Orders = lazy(() => import('../../views/custom/orders'))\r\nconst NFTs = lazy(() => import('../../views/custom/nfts'))\r\nconst Account = lazy(() => import('../../views/custom/account'))\r\n\r\nconst CustomRoutes = [\r\n  {\r\n    path: '/custom/settings',\r\n    element: <Settings />\r\n  },\r\n  {\r\n    path: '/custom/products',\r\n    element: <Proudcts />\r\n  },\r\n  {\r\n    path: '/custom/orders',\r\n    element: <Orders />\r\n  },\r\n  {\r\n    path: '/custom/nfts',\r\n    element: <NFTs />\r\n  },\r\n  {\r\n    path: '/custom/account',\r\n    element: <Account />\r\n  }\r\n]\r\n\r\nexport default CustomRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst Country = lazy(() => import('../../views/init/country'))\r\n\r\nconst InitDataRoutes = [\r\n  {\r\n    path: '/init/country',\r\n    element: <Country />\r\n  }\r\n]\r\n\r\nexport default InitDataRoutes\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport { selectThemeColors } from '@utils'\r\nimport { Settings, X } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Reactstrap Imports\r\nimport { Input, Label } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst Customizer = props => {\r\n  // ** Props\r\n  const {\r\n    skin,\r\n    isRtl,\r\n    layout,\r\n    setSkin,\r\n    setIsRtl,\r\n    isHidden,\r\n    setLayout,\r\n    navbarType,\r\n    footerType,\r\n    transition,\r\n    navbarColor,\r\n    setIsHidden,\r\n    contentWidth,\r\n    menuCollapsed,\r\n    setLastLayout,\r\n    setTransition,\r\n    setNavbarType,\r\n    setFooterType,\r\n    setNavbarColor,\r\n    setContentWidth,\r\n    setMenuCollapsed\r\n  } = props\r\n\r\n  // ** State\r\n  const [openCustomizer, setOpenCustomizer] = useState(false)\r\n\r\n  // ** Toggles Customizer\r\n  const handleToggle = e => {\r\n    e.preventDefault()\r\n    setOpenCustomizer(!openCustomizer)\r\n  }\r\n\r\n  // ** Render Layout Skin Options\r\n  const renderSkinsRadio = () => {\r\n    const skinsArr = [\r\n      {\r\n        name: 'light',\r\n        label: 'Light',\r\n        checked: skin === 'light'\r\n      },\r\n      {\r\n        name: 'bordered',\r\n        label: 'Bordered',\r\n        checked: skin === 'bordered'\r\n      },\r\n      {\r\n        name: 'dark',\r\n        label: 'Dark',\r\n        checked: skin === 'dark'\r\n      },\r\n      {\r\n        name: 'semi-dark',\r\n        label: 'Semi Dark',\r\n        checked: skin === 'semi-dark'\r\n      }\r\n    ]\r\n\r\n    return skinsArr.map((radio, index) => {\r\n      const marginCondition = index !== skinsArr.length - 1\r\n\r\n      if (layout === 'horizontal' && radio.name === 'semi-dark') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\r\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setSkin(radio.name)} />\r\n          <Label className='form-check-label' for={radio.name}>\r\n            {radio.label}\r\n          </Label>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Navbar Colors Options\r\n  const renderNavbarColors = () => {\r\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\r\n\r\n    return colorsArr.map(color => (\r\n      <li\r\n        key={color}\r\n        className={classnames(`color-box bg-${color}`, {\r\n          selected: navbarColor === color,\r\n          border: color === 'white'\r\n        })}\r\n        onClick={() => setNavbarColor(color)}\r\n      ></li>\r\n    ))\r\n  }\r\n\r\n  // ** Render Navbar Type Options\r\n  const renderNavbarTypeRadio = () => {\r\n    const navbarTypeArr = [\r\n      {\r\n        name: 'floating',\r\n        label: 'Floating',\r\n        checked: navbarType === 'floating'\r\n      },\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: navbarType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: navbarType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: navbarType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return navbarTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== navbarTypeArr.length - 1\r\n\r\n      if (layout === 'horizontal' && radio.name === 'hidden') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\r\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setNavbarType(radio.name)} />\r\n          <Label className='form-check-label' for={radio.name}>\r\n            {radio.label}\r\n          </Label>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Footer Type Options\r\n  const renderFooterTypeRadio = () => {\r\n    const footerTypeArr = [\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: footerType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: footerType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: footerType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return footerTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== footerTypeArr.length - 1\r\n\r\n      return (\r\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\r\n          <Input\r\n            type='radio'\r\n            checked={radio.checked}\r\n            id={`footer-${radio.name}`}\r\n            onChange={() => setFooterType(radio.name)}\r\n          />\r\n          <Label className='form-check-label' for={`footer-${radio.name}`}>\r\n            {radio.label}\r\n          </Label>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  // **  Router Transition Options\r\n  const transitionOptions = [\r\n    { value: 'fadeIn', label: 'Fade' },\r\n    { value: 'fadeInLeft', label: 'Fade In Left' },\r\n    { value: 'zoomIn', label: 'Zoom In' },\r\n    { value: 'none', label: 'None' }\r\n  ]\r\n\r\n  // ** Get Current Transition\r\n  const transitionValue = transitionOptions.find(i => i.value === transition)\r\n\r\n  return (\r\n    <div\r\n      className={classnames('customizer d-none d-md-block', {\r\n        open: openCustomizer\r\n      })}\r\n    >\r\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\r\n        <Settings size={14} className='spinner' />\r\n      </a>\r\n      <PerfectScrollbar className='customizer-content' options={{ wheelPropagation: false }}>\r\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\r\n          <h4 className='mb-0'>Theme Customizer</h4>\r\n          <p className='m-0'>Customize & Preview in Real Time</p>\r\n          <a href='/' className='customizer-close' onClick={handleToggle}>\r\n            <X />\r\n          </a>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>Skin</p>\r\n            <div className='d-flex'>{renderSkinsRadio()}</div>\r\n          </div>\r\n\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>Content Width</p>\r\n            <div className='d-flex'>\r\n              <div className='form-check me-1'>\r\n                <Input\r\n                  type='radio'\r\n                  id='full-width'\r\n                  checked={contentWidth === 'full'}\r\n                  onChange={() => setContentWidth('full')}\r\n                />\r\n                <Label className='form-check-label' for='full-width'>\r\n                  Full Width\r\n                </Label>\r\n              </div>\r\n              <div className='form-check'>\r\n                <Input\r\n                  id='boxed'\r\n                  type='radio'\r\n                  checked={contentWidth === 'boxed'}\r\n                  onChange={() => setContentWidth('boxed')}\r\n                />\r\n                <Label className='form-check-label' for='boxed'>\r\n                  Boxed\r\n                </Label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-switch mb-2 ps-0'>\r\n            <div className='d-flex'>\r\n              <p className='fw-bold me-auto mb-0'>RTL</p>\r\n              <Input type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-2'>\r\n            <div className='d-flex justify-content-between align-items-center'>\r\n              <p className='fw-bold mb-0'>Router Transition</p>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                defaultValue={transitionOptions[0]}\r\n                value={transitionValue}\r\n                options={transitionOptions}\r\n                isClearable={false}\r\n                onChange={({ value }) => setTransition(value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <p className='fw-bold'>Menu Layout</p>\r\n          <div className='mb-2'>\r\n            <div className='d-flex align-items-center'>\r\n              <div className='form-check me-1'>\r\n                <Input\r\n                  type='radio'\r\n                  id='vertical-layout'\r\n                  checked={layout === 'vertical'}\r\n                  onChange={() => {\r\n                    setLayout('vertical')\r\n                    setLastLayout('vertical')\r\n                  }}\r\n                />\r\n                <Label className='form-check-label' for='vertical-layout'>\r\n                  Vertical\r\n                </Label>\r\n              </div>\r\n              <div className='form-check'>\r\n                <Input\r\n                  type='radio'\r\n                  id='horizontal-layout'\r\n                  checked={layout === 'horizontal'}\r\n                  onChange={() => {\r\n                    setLayout('horizontal')\r\n                    setLastLayout('horizontal')\r\n                  }}\r\n                />\r\n                <Label className='form-check-label' for='horizontal-layout'>\r\n                  Horizontal\r\n                </Label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {layout !== 'horizontal' ? (\r\n            <div className='form-switch mb-2 ps-0'>\r\n              <div className='d-flex align-items-center'>\r\n                <p className='fw-bold me-auto mb-0'>Menu Collapsed</p>\r\n                <Input\r\n                  type='switch'\r\n                  id='menu-collapsed'\r\n                  name='menu-collapsed'\r\n                  checked={menuCollapsed}\r\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className='form-switch mb-2 ps-0'>\r\n            <div className='d-flex align-items-center'>\r\n              <p className='fw-bold me-auto mb-0'>Menu Hidden</p>\r\n              <Input\r\n                type='switch'\r\n                id='menu-hidden'\r\n                name='menu-hidden'\r\n                checked={isHidden}\r\n                onChange={() => setIsHidden(!isHidden)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          {layout !== 'horizontal' ? (\r\n            <div className='mb-2'>\r\n              <p className='fw-bold'>Navbar Color</p>\r\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>{layout === 'horizontal' ? 'Menu' : 'Navbar'} Type</p>\r\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>Footer Type</p>\r\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\r\n          </div>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Customizer\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n\r\nconst ScrollTop = props => {\r\n  // ** Props\r\n  const { showOffset, scrollBehaviour, children, ...rest } = props\r\n\r\n  // ** State\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (window) {\r\n      window.addEventListener('scroll', () => {\r\n        if (window.pageYOffset >= showOffset) {\r\n          setVisible(true)\r\n        } else {\r\n          setVisible(false)\r\n        }\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const handleScrollToTop = () => {\r\n    window.scroll({ top: 0, behavior: scrollBehaviour })\r\n  }\r\n\r\n  return (\r\n    visible && (\r\n      <div className='scroll-to-top' onClick={handleScrollToTop} {...rest}>\r\n        {children}\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default ScrollTop\r\n\r\n// ** PropTypes\r\nScrollTop.propTypes = {\r\n  showOffset: Proptypes.number,\r\n  children: Proptypes.any.isRequired,\r\n  scrollBehaviour: Proptypes.oneOf(['smooth', 'instant', 'auto'])\r\n}\r\n\r\nScrollTop.defaultProps = {\r\n  scrollBehaviour: 'smooth'\r\n}\r\n","// ** Icons Import\r\nimport { Heart } from 'react-feather'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className='clearfix mb-0'>\r\n      <span className='float-md-start d-block d-md-inline-block mt-25'>\r\n        COPYRIGHT © {new Date().getFullYear()}{' '}\r\n        <a href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>\r\n          Pixinvent\r\n        </a>\r\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\r\n      </span>\r\n      {/* <span className='float-md-end d-none d-md-block'>\r\n        Hand-crafted & Made with\r\n        <Heart size={14} />\r\n      </span> */}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogout } from '@store/authentication'\r\n\r\n// ** Third Party Components\r\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\r\n\r\n// ** Default Avatar Image\r\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\nconst UserDropdown = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const [userData, setUserData] = useState(null)\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (isUserLoggedIn() !== null) {\r\n      setUserData(JSON.parse(localStorage.getItem('userData')))\r\n    }\r\n  }, [])\r\n\r\n  //** Vars\r\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\r\n\r\n  return (\r\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\r\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\r\n        <div className='user-nav d-sm-flex d-none'>\r\n          <span className='user-name fw-bold'>{(userData && userData['username']) || 'John Doe'}</span>\r\n          <span className='user-status'>{(userData && userData.role) || 'Admin'}</span>\r\n        </div>\r\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\r\n      </DropdownToggle>\r\n      <DropdownMenu end>\r\n        <DropdownItem tag={Link} to='/custom/account'>\r\n          <User size={14} className='me-75' />\r\n          <span className='align-middle'>Account</span>\r\n        </DropdownItem>\r\n        {/* <DropdownItem tag={Link} to='/pages/profile'>\r\n          <User size={14} className='me-75' />\r\n          <span className='align-middle'>Profile</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/apps/email'>\r\n          <Mail size={14} className='me-75' />\r\n          <span className='align-middle'>Inbox</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/apps/todo'>\r\n          <CheckSquare size={14} className='me-75' />\r\n          <span className='align-middle'>Tasks</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/apps/chat'>\r\n          <MessageSquare size={14} className='me-75' />\r\n          <span className='align-middle'>Chats</span>\r\n        </DropdownItem>\r\n        <DropdownItem divider />\r\n        <DropdownItem tag={Link} to='/pages/account-settings'>\r\n          <Settings size={14} className='me-75' />\r\n          <span className='align-middle'>Settings</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/pages/pricing'>\r\n          <CreditCard size={14} className='me-75' />\r\n          <span className='align-middle'>Pricing</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/pages/faq'>\r\n          <HelpCircle size={14} className='me-75' />\r\n          <span className='align-middle'>FAQ</span>\r\n        </DropdownItem> */}\r\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\r\n          <Power size={14} className='me-75' />\r\n          <span className='align-middle'>Logout</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default UserDropdown\r\n","// ** Dropdowns Imports\r\n// import IntlDropdown from './IntlDropdown'\r\n// import CartDropdown from './CartDropdown'\r\nimport UserDropdown from './UserDropdown'\r\n// import NavbarSearch from './NavbarSearch'\r\n// import NotificationDropdown from './NotificationDropdown'\r\n\r\n// ** Third Party Components\r\nimport { Sun, Moon } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\n// import { NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavbarUser = props => {\r\n  // ** Props\r\n  const { skin, setSkin } = props\r\n\r\n  // ** Function to toggle Theme (Light/Dark)\r\n  const ThemeToggler = () => {\r\n    if (skin === 'dark') {\r\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\r\n    } else {\r\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ul className='nav navbar-nav align-items-center ms-auto'>\r\n      {/* <IntlDropdown />\r\n      <NavItem className='d-none d-lg-block'>\r\n        <NavLink className='nav-link-style'>\r\n          <ThemeToggler />\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavbarSearch />\r\n      <CartDropdown />\r\n      <NotificationDropdown /> */}\r\n      <UserDropdown />\r\n    </ul>\r\n  )\r\n}\r\nexport default NavbarUser\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport NavbarUser from './NavbarUser'\r\n\r\nconst ThemeNavbar = props => {\r\n  // ** Props\r\n  const { skin, setSkin } = props\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavbarUser skin={skin} setSkin={setSkin} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ThemeNavbar\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Icons Imports\r\nimport { Disc, X, Circle } from 'react-feather'\r\n\r\n// ** Config\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Utils\r\nimport { getUserData, getHomeRouteForLoggedInUser } from '@utils'\r\n\r\nconst VerticalMenuHeader = props => {\r\n  // ** Props\r\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\r\n\r\n  // ** Vars\r\n  const user = getUserData()\r\n\r\n  // ** Reset open group\r\n  useEffect(() => {\r\n    if (!menuHover && menuCollapsed) setGroupOpen([])\r\n  }, [menuHover, menuCollapsed])\r\n\r\n  // ** Menu toggler component\r\n  const Toggler = () => {\r\n    if (!menuCollapsed) {\r\n      return (\r\n        <Disc\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(true)}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Circle\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-header'>\r\n      <ul className='nav navbar-nav flex-row'>\r\n        <li className='nav-item me-auto'>\r\n          <NavLink to={user ? getHomeRouteForLoggedInUser(user.role) : '/'} className='navbar-brand'>\r\n            <span className='brand-logo'>\r\n              {/* <img src={themeConfig.app.appLogoImage} alt='logo' /> */}\r\n            </span>\r\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n          </NavLink>\r\n        </li>\r\n        <li className='nav-item nav-toggle'>\r\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\r\n            <Toggler />\r\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuHeader\r\n","// ** React Imports\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst VerticalNavMenuLink = ({ item, activeItem }) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <li\r\n      className={classnames({\r\n        'nav-item': !item.children,\r\n        disabled: item.disabled,\r\n        active: item.navLink === activeItem\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className='d-flex align-items-center'\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              className: ({ isActive }) => {\r\n                if (isActive && !item.disabled) {\r\n                  return 'd-flex align-items-center active'\r\n                }\r\n              }\r\n            })}\r\n        onClick={e => {\r\n          if (item.navLink.length === 0 || item.navLink === '#' || item.disabled === true) {\r\n            e.preventDefault()\r\n          }\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-item text-truncate'>{t(item.title)}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ms-auto me-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuLink\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveVerticalNavMenuItemComponent = item => {\r\n  if (item.header) return 'VerticalNavMenuSectionHeader'\r\n  if (item.children) return 'VerticalNavMenuGroup'\r\n  return 'VerticalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveHorizontalNavMenuItemComponent = item => {\r\n  if (item.children) return 'HorizontalNavMenuGroup'\r\n  return 'HorizontalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\r\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\r\n  return (\r\n    currentURL === link ||\r\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\r\n  )\r\n  // return currentURL === link\r\n}\r\n\r\n/**\r\n * Check if the given item has the given url\r\n * in one of its children\r\n *\r\n * @param item\r\n * @param activeItem\r\n */\r\nexport const hasActiveChild = (item, currentUrl) => {\r\n  const { children } = item\r\n\r\n  if (!children) {\r\n    return false\r\n  }\r\n\r\n  for (const child of children) {\r\n    if (child.children) {\r\n      if (hasActiveChild(child, currentUrl)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    // Check if the child has a link and is active\r\n    if (child && child.navLink && currentUrl && (child.navLink === currentUrl || currentUrl.includes(child.navLink))) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Check if this is a children\r\n * of the given item\r\n *\r\n * @param children\r\n * @param openGroup\r\n * @param currentActiveGroup\r\n */\r\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\r\n  children.forEach(child => {\r\n    if (!currentActiveGroup.includes(child.id)) {\r\n      const index = openGroup.indexOf(child.id)\r\n      if (index > -1) openGroup.splice(index, 1)\r\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\r\n    }\r\n  })\r\n}\r\n\r\nexport const canViewMenuGroup = item => {\r\n  const ability = useContext(AbilityContext)\r\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\r\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\r\n\r\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\r\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\r\n  if (!(item.action && item.resource)) {\r\n    return hasAnyVisibleChild\r\n  }\r\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\r\n}\r\n\r\nexport const canViewMenuItem = item => {\r\n  const ability = useContext(AbilityContext)\r\n  return ability.can(item.action, item.resource)\r\n}\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Reactstrap Imports\r\nimport { Collapse, Badge } from 'reactstrap'\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// ** Utils\r\nimport { hasActiveChild, removeChildren } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupOpen,\r\n  menuHover,\r\n  activeItem,\r\n  parentItem,\r\n  groupActive,\r\n  setGroupOpen,\r\n  menuCollapsed,\r\n  setGroupActive,\r\n  currentActiveGroup,\r\n  setCurrentActiveGroup,\r\n  ...rest\r\n}) => {\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n  const location = useLocation()\r\n\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Toggle Open Group\r\n  const toggleOpenGroup = (item, parent) => {\r\n    let openGroup = groupOpen\r\n    const activeGroup = groupActive\r\n\r\n    // ** If Group is already open and clicked, close the group\r\n    if (openGroup.includes(item.id)) {\r\n      openGroup.splice(openGroup.indexOf(item.id), 1)\r\n\r\n      // ** If clicked Group has open group children, Also remove those children to close those groups\r\n      if (item.children) {\r\n        removeChildren(item.children, openGroup, groupActive)\r\n      }\r\n    } else if (activeGroup.includes(item.id) || currentActiveGroup.includes(item.id)) {\r\n      // ** If Group clicked is Active Group\r\n\r\n      // ** If Active group is closed and clicked again, we should open active group else close active group\r\n      if (!activeGroup.includes(item.id) && currentActiveGroup.includes(item.id)) {\r\n        activeGroup.push(item.id)\r\n      } else {\r\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\r\n      }\r\n\r\n      // ** Update Active Group\r\n      setGroupActive([...activeGroup])\r\n    } else if (parent) {\r\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\r\n      if (parent.children) {\r\n        removeChildren(parent.children, openGroup, groupActive)\r\n      }\r\n\r\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\r\n      if (!openGroup.includes(item.id)) {\r\n        openGroup.push(item.id)\r\n      }\r\n    } else {\r\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\r\n\r\n      // ** Empty Open Group array\r\n      openGroup = []\r\n\r\n      // ** Push current clicked group item to Open Group array\r\n      if (!openGroup.includes(item.id)) {\r\n        openGroup.push(item.id)\r\n      }\r\n    }\r\n    setGroupOpen([...openGroup])\r\n  }\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    toggleOpenGroup(item, parentItem)\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  // ** Checks url & updates active item\r\n  useEffect(() => {\r\n    if (hasActiveChild(item, currentURL)) {\r\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\r\n    } else {\r\n      const index = groupActive.indexOf(item.id)\r\n      if (index > -1) groupActive.splice(index, 1)\r\n    }\r\n    setGroupActive([...groupActive])\r\n    setCurrentActiveGroup([...groupActive])\r\n    setGroupOpen([])\r\n  }, [location])\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = id => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\r\n        return true\r\n      }\r\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\r\n      return false\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item has-sub', {\r\n        open: openClassCondition(item.id),\r\n        'menu-collapsed-open': groupActive.includes(item.id),\r\n        'sidebar-group-active':\r\n          groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\r\n      })}\r\n    >\r\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\r\n        {item.icon}\r\n        <span className='menu-title text-truncate'>{t(item.title)}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ms-auto me-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className='menu-content'>\r\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\r\n          <VerticalNavMenuItems\r\n            {...rest}\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            currentActiveGroup={currentActiveGroup}\r\n            setCurrentActiveGroup={setCurrentActiveGroup}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            activeItem={activeItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuGroup\r\n","// ** Third Party Components\r\nimport { MoreHorizontal } from 'react-feather'\r\n\r\nconst VerticalNavMenuSectionHeader = ({ item }) => {\r\n  return (\r\n    <li className='navigation-header'>\r\n      <span>{item.header}</span>\r\n      <MoreHorizontal className='feather-more-horizontal' />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuSectionHeader\r\n","// ** Vertical Menu Components\r\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\r\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\r\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\r\n\r\n// ** Utils\r\nimport {\r\n  canViewMenuItem,\r\n  canViewMenuGroup,\r\n  resolveVerticalNavMenuItemComponent as resolveNavItemComponent\r\n} from '@layouts/utils'\r\n\r\nconst VerticalMenuNavItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    VerticalNavMenuLink,\r\n    VerticalNavMenuGroup,\r\n    VerticalNavMenuSectionHeader\r\n  }\r\n\r\n  // ** Render Nav Menu Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n    if (item.children) {\r\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\r\n    }\r\n    return canViewMenuItem(item) && <TagName key={item.id || item.header} item={item} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default VerticalMenuNavItems\r\n","// ** React Imports\r\nimport { Fragment, useState, useRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalMenuHeader from './VerticalMenuHeader'\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const { menuCollapsed, menu, skin, menuData } = props\r\n\r\n  // ** States\r\n  const [groupOpen, setGroupOpen] = useState([])\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  // ** Menu Hover State\r\n  const [menuHover, setMenuHover] = useState(false)\r\n\r\n  // ** Ref\r\n  const shadowRef = useRef(null)\r\n\r\n  // ** Function to handle Mouse Enter\r\n  const onMouseEnter = () => {\r\n    setMenuHover(true)\r\n  }\r\n\r\n  // ** Scroll Menu\r\n  const scrollMenu = container => {\r\n    if (shadowRef && container.scrollTop > 0) {\r\n      if (!shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.add('d-block')\r\n      }\r\n    } else {\r\n      if (shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.remove('d-block')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\r\n          expanded: menuHover || menuCollapsed === false,\r\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\r\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\r\n        })}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={() => setMenuHover(false)}\r\n      >\r\n        {menu ? (\r\n          menu({ ...props })\r\n        ) : (\r\n          <Fragment>\r\n            {/* Vertical Menu Header */}\r\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\r\n            {/* Vertical Menu Header Shadow */}\r\n            <div className='shadow-bottom' ref={shadowRef}></div>\r\n            {/* Perfect Scrollbar */}\r\n            <PerfectScrollbar\r\n              className='main-menu-content'\r\n              options={{ wheelPropagation: false }}\r\n              onScrollY={container => scrollMenu(container)}\r\n            >\r\n              <ul className='navigation navigation-main'>\r\n                <VerticalNavMenuItems\r\n                  items={menuData}\r\n                  menuData={menuData}\r\n                  menuHover={menuHover}\r\n                  groupOpen={groupOpen}\r\n                  activeItem={activeItem}\r\n                  groupActive={groupActive}\r\n                  setGroupOpen={setGroupOpen}\r\n                  menuCollapsed={menuCollapsed}\r\n                  setActiveItem={setActiveItem}\r\n                  setGroupActive={setGroupActive}\r\n                  currentActiveGroup={currentActiveGroup}\r\n                  setCurrentActiveGroup={setCurrentActiveGroup}\r\n                />\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    dispatch(handleRTL(value))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","// ** Store Imports\r\nimport { handleNavbarType } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setNavbarType = type => {\r\n    dispatch(handleNavbarType(type))\r\n  }\r\n\r\n  return { navbarType: store.navbarType, setNavbarType }\r\n}\r\n","// ** Store Imports\r\nimport { handleFooterType } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useFooterType = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setFooterType = type => {\r\n    dispatch(handleFooterType(type))\r\n  }\r\n\r\n  return { setFooterType, footerType: store.footerType }\r\n}\r\n","// ** Store Imports\r\nimport { handleNavbarColor } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setNavbarColor = value => {\r\n    dispatch(handleNavbarColor(value))\r\n  }\r\n\r\n  return { navbarColor: store.navbarColor, setNavbarColor }\r\n}\r\n","// ** Store Imports\r\nimport { handleRouterTransition } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setTransition = type => {\r\n    dispatch(handleRouterTransition(type))\r\n  }\r\n\r\n  return { transition: store.routerTransition, setTransition }\r\n}\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Navbar, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\n\r\nimport Customizer from '@components/customizer'\r\nimport ScrollToTop from '@components/scrolltop'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const { menu, navbar, footer, children, menuData } = props\r\n\r\n  // ** Hooks\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const { skin, setSkin } = useSkin()\r\n  const { navbarType, setNavbarType } = useNavbarType()\r\n  const { footerType, setFooterType } = useFooterType()\r\n  const { navbarColor, setNavbarColor } = useNavbarColor()\r\n  const { layout, setLayout, setLastLayout } = useLayout()\r\n  const { transition, setTransition } = useRouterTransition()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const isHidden = layoutStore.menuHidden\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        }`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuData={menuData}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n        />\r\n      ) : null}\r\n\r\n      <Navbar\r\n        expand='lg'\r\n        container={false}\r\n        light={skin !== 'dark'}\r\n        dark={skin === 'dark' || bgColorCondition}\r\n        color={bgColorCondition ? navbarColor : undefined}\r\n        className={classnames(\r\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\r\n        )}\r\n      >\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? (\r\n            navbar({ skin, setSkin, setMenuVisibility })\r\n          ) : (\r\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\r\n          )}\r\n        </div>\r\n      </Navbar>\r\n      {children}\r\n\r\n      {/* Vertical Nav Menu Overlay */}\r\n      <div\r\n        className={classnames('sidenav-overlay', {\r\n          show: menuVisibility\r\n        })}\r\n        onClick={() => setMenuVisibility(false)}\r\n      ></div>\r\n      {/* Vertical Nav Menu Overlay */}\r\n\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          isRtl={isRtl}\r\n          layout={layout}\r\n          setSkin={setSkin}\r\n          setIsRtl={setIsRtl}\r\n          isHidden={isHidden}\r\n          setLayout={setLayout}\r\n          footerType={footerType}\r\n          navbarType={navbarType}\r\n          transition={transition}\r\n          setIsHidden={setIsHidden}\r\n          themeConfig={themeConfig}\r\n          navbarColor={navbarColor}\r\n          contentWidth={contentWidth}\r\n          setTransition={setTransition}\r\n          setFooterType={setFooterType}\r\n          setNavbarType={setNavbarType}\r\n          setLastLayout={setLastLayout}\r\n          menuCollapsed={menuCollapsed}\r\n          setNavbarColor={setNavbarColor}\r\n          setContentWidth={setContentWidth}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","// ** Icons Import\r\nimport { Settings, Package, Droplet, Image } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    header: 'Apps'\r\n  },\r\n  {\r\n    id: 'products',\r\n    title: 'Products',\r\n    icon: <Package size={20} />,\r\n    navLink: '/custom/products'\r\n  },\r\n  {\r\n    id: 'orders',\r\n    title: 'Orders',\r\n    icon: <Droplet size={20} />,\r\n    navLink: '/custom/orders'\r\n  },\r\n  {\r\n    id: 'nfts',\r\n    title: 'NFTs',\r\n    icon: <Image size={20} />,\r\n    navLink: '/custom/nfts'\r\n  }\r\n  // ,\r\n  // {\r\n  //   id: 'settings',\r\n  //   title: 'Settings',\r\n  //   icon: <Settings size={20} />,\r\n  //   navLink: '/custom/settings'\r\n  // }\r\n]\r\n","// ** Icons Import\r\nimport { Hexagon } from 'react-feather'\r\n\r\nexport default [\r\n\r\n  {\r\n    id: 'country',\r\n    title: 'Country',\r\n    icon: <Hexagon size={20} />,\r\n    navLink: '/init/country'\r\n  }\r\n]\r\n","// ** Navigation imports\r\nimport apps from './apps'\r\nimport init from './init'\r\nexport default [...apps, ...init]","// ** React Imports\r\nimport { Outlet } from 'react-router-dom'\r\n\r\n// ** Core Layout Import\r\n// !Do not remove the Layout import\r\nimport Layout from '@layouts/VerticalLayout'\r\n\r\n// ** Menu Items Array\r\nimport navigation from '@src/navigation/vertical'\r\n\r\nconst VerticalLayout = props => {\r\n  // const [menuData, setMenuData] = useState([])\r\n\r\n  // ** For ServerSide navigation\r\n  // useEffect(() => {\r\n  //   axios.get(URL).then(response => setMenuData(response.data))\r\n  // }, [])\r\n\r\n  return (\r\n    <Layout menuData={navigation} {...props}>\r\n      <Outlet />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","// ** React Imports\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst HorizontalNavMenuLink = ({ item, isChild, setMenuOpen }) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n\r\n  const handleClick = () => {\r\n    if (setMenuOpen) {\r\n      setMenuOpen(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      onClick={handleClick}\r\n      className={classnames('nav-item', {\r\n        disabled: item.disabled\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className={classnames('d-flex align-items-center', {\r\n          'dropdown-item': isChild,\r\n          'nav-link': !isChild\r\n        })}\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              className: ({ isActive }) => {\r\n                const commonClass = 'd-flex align-items-center'\r\n                if (isActive && !item.disabled && item.navLink !== '#') {\r\n                  if (isChild) {\r\n                    return `${commonClass} dropdown-item active`\r\n                  } else {\r\n                    return `${commonClass} nav-link active`\r\n                  }\r\n                } else {\r\n                  if (isChild) {\r\n                    return `${commonClass} dropdown-item`\r\n                  } else {\r\n                    return `${commonClass} nav-link`\r\n                  }\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n      >\r\n        {item.icon}\r\n        <span>{t(item.title)}</span>\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuLink\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { usePopper } from 'react-popper'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Utils\r\nimport { hasActiveChild } from '@layouts/utils'\r\n\r\n// ** Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\n\r\n// ** Horizontal Menu Items Component\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst applyHeight = {\r\n  enabled: true,\r\n  name: 'applyHeight',\r\n  phase: 'beforeWrite',\r\n  fn: data => {\r\n    const pageHeight = window.innerHeight,\r\n      popperEl = data.state.elements.popper,\r\n      ddTop = popperEl.getBoundingClientRect().top,\r\n      ddHeight = popperEl.clientHeight\r\n    let maxHeight, stylesObj\r\n    // ** Calculate and set height\r\n    if (pageHeight - ddTop - ddHeight - 28 < 1) {\r\n      maxHeight = pageHeight - ddTop - 25\r\n      stylesObj = {\r\n        maxHeight,\r\n        overflowY: 'auto'\r\n      }\r\n    }\r\n    const ddRef = popperEl.getBoundingClientRect()\r\n    // ** If there is not space left to open sub menu open it to the right\r\n    if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\r\n      popperEl.closest('.dropdown').classList.add('openLeft')\r\n    }\r\n    data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\r\n  }\r\n}\r\n\r\nconst HorizontalNavMenuGroup = props => {\r\n  // ** Props\r\n  const { item, submenu, isChild } = props\r\n\r\n  // ** State\r\n  const [menuOpen, setMenuOpen] = useState(false)\r\n  const [popperElement, setPopperElement] = useState(null)\r\n  const [referenceElement, setReferenceElement] = useState(null)\r\n\r\n  // ** Hooks\r\n  const [isRtl] = useRTL()\r\n\r\n  // ** Vars\r\n  const popperOffsetHorizontal = isRtl ? 16 : -16\r\n  const popperPlacement = isRtl ? 'bottom-end' : 'bottom-start'\r\n  const popperPlacementSubMenu = isRtl ? 'left-start' : 'right-start'\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n  const currentURL = useLocation().pathname\r\n  const { update, styles, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement: isChild ? popperPlacementSubMenu : popperPlacement,\r\n    modifiers: [\r\n      applyHeight,\r\n      {\r\n        enabled: true,\r\n        name: 'offset',\r\n        options: {\r\n          offset: isChild ? [-8, 15] : [popperOffsetHorizontal, 5]\r\n        }\r\n      }\r\n    ]\r\n  })\r\n\r\n  const handleMouseEnter = () => {\r\n    setMenuOpen(true)\r\n    update()\r\n  }\r\n\r\n  return (\r\n    <li\r\n      ref={setReferenceElement}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={() => setMenuOpen(false)}\r\n      className={classnames('dropdown', {\r\n        show: menuOpen,\r\n        'nav-item': submenu === false,\r\n        'dropdown-submenu': submenu === true,\r\n        'sidebar-group-active active': hasActiveChild(item, currentURL)\r\n      })}\r\n    >\r\n      <Link\r\n        to='/'\r\n        onClick={e => e.preventDefault()}\r\n        className={classnames('dropdown-toggle d-flex align-items-center', {\r\n          'dropdown-item': submenu === true,\r\n          'nav-link': submenu === false\r\n        })}\r\n      >\r\n        {item.icon}\r\n        <span>{t(item.title)}</span>\r\n      </Link>\r\n      <ul\r\n        ref={setPopperElement}\r\n        style={{ ...styles.popper }}\r\n        {...attributes.popper}\r\n        className={classnames('dropdown-menu', { 'first-level': submenu === false })}\r\n      >\r\n        <HorizontalNavMenuItems\r\n          isChild={true}\r\n          submenu={true}\r\n          parentItem={item}\r\n          menuOpen={menuOpen}\r\n          items={item.children}\r\n          setMenuOpen={setMenuOpen}\r\n        />\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuGroup\r\n","// ** Menu Components Imports\r\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\r\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\r\nimport {\r\n  resolveHorizontalNavMenuItemComponent as resolveNavItemComponent,\r\n  canViewMenuGroup,\r\n  canViewMenuItem\r\n} from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    HorizontalNavMenuGroup,\r\n    HorizontalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n    if (item.children) {\r\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\r\n    }\r\n    return canViewMenuItem(item) && <TagName item={item} index={index} key={item.id} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default HorizontalNavMenuItems\r\n","// ** Horizontal Menu Components\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalMenu = ({ menuData }) => {\r\n  return (\r\n    <div className='navbar-container main-menu-content'>\r\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\r\n        <HorizontalNavMenuItems submenu={false} items={menuData} />\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalMenu\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuHidden, handleContentWidth } from '@store/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Navbar, NavItem, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\n\r\nimport Customizer from '@components/customizer'\r\nimport ScrollToTop from '@components/scrolltop'\r\nimport NavbarComponent from './components/navbar'\r\nimport FooterComponent from './components/footer'\r\nimport MenuComponent from './components/menu/horizontal-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\r\n\r\nconst HorizontalLayout = props => {\r\n  // ** Props\r\n  const { navbar, menuData, footer, children, menu } = props\r\n\r\n  // ** Hooks\r\n  const { skin, setSkin } = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const { navbarType, setNavbarType } = useNavbarType()\r\n  const { footerType, setFooterType } = useFooterType()\r\n  const { navbarColor, setNavbarColor } = useNavbarColor()\r\n  const { layout, setLayout, setLastLayout } = useLayout()\r\n  const { transition, setTransition } = useRouterTransition()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Vars\r\n  const contentWidth = layoutStore.contentWidth\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  // ** UseEffect Cleanup\r\n  const cleanup = () => {\r\n    setIsMounted(false)\r\n    setNavbarScrolled(false)\r\n  }\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    window.addEventListener('scroll', function () {\r\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\r\n        setNavbarScrolled(true)\r\n      }\r\n      if (window.pageYOffset < 65) {\r\n        setNavbarScrolled(false)\r\n      }\r\n    })\r\n    return () => cleanup()\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\r\n    sticky: 'fixed-top'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${footerClasses[footerType] || 'footer-static'\r\n        } menu-expanded`\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      <Navbar\r\n        expand='lg'\r\n        container={false}\r\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\r\n          'navbar-scrolled': navbarScrolled\r\n        })}\r\n      >\r\n        {!navbar && (\r\n          <div className='navbar-header d-xl-block d-none'>\r\n            <ul className='nav navbar-nav'>\r\n              <NavItem>\r\n                <Link to='/' className='navbar-brand'>\r\n                  <span className='brand-logo'>\r\n                    {/* <img src={themeConfig.app.appLogoImage} alt='logo' /> */}\r\n                  </span>\r\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n                </Link>\r\n              </NavItem>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\r\n        </div>\r\n      </Navbar>\r\n      {!isHidden ? (\r\n        <div className='horizontal-menu-wrapper'>\r\n          <Navbar\r\n            tag='div'\r\n            expand='sm'\r\n            light={skin !== 'dark'}\r\n            dark={skin === 'dark' || bgColorCondition}\r\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\r\n              [navbarClasses[navbarType]]: navbarType !== 'static',\r\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\r\n            })}\r\n          >\r\n            {menu ? menu({ menuData, routerProps, currentActiveItem }) : <MenuComponent menuData={menuData} />}\r\n          </Navbar>\r\n        </div>\r\n      ) : null}\r\n\r\n      {children}\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          isRtl={isRtl}\r\n          layout={layout}\r\n          setSkin={setSkin}\r\n          setIsRtl={setIsRtl}\r\n          isHidden={isHidden}\r\n          setLayout={setLayout}\r\n          footerType={footerType}\r\n          navbarType={navbarType}\r\n          transition={transition}\r\n          setIsHidden={setIsHidden}\r\n          themeConfig={themeConfig}\r\n          navbarColor={navbarColor}\r\n          contentWidth={contentWidth}\r\n          setTransition={setTransition}\r\n          setFooterType={setFooterType}\r\n          setNavbarType={setNavbarType}\r\n          setLastLayout={setLastLayout}\r\n          setNavbarColor={setNavbarColor}\r\n          setContentWidth={setContentWidth}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\nexport default HorizontalLayout\r\n","// ** Navigation imports\r\nimport apps from './apps'\r\n// import pages from './pages'\r\n// import others from './others'\r\n// import charts from './charts'\r\n// import dashboards from './dashboards'\r\n// import uiElements from './ui-elements'\r\n// import formsAndTables from './forms-tables'\r\n\r\n// ** Merge & Export\r\nexport default apps\r\n","// ** Icons Import\r\nimport {\r\n  Box,\r\n  Mail,\r\n  User,\r\n  Circle,\r\n  Shield,\r\n  Calendar,\r\n  FileText,\r\n  CheckSquare,\r\n  ShoppingCart,\r\n  MessageSquare\r\n} from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'apps',\r\n    title: 'Apps',\r\n    icon: <Box />,\r\n    children: [\r\n      {\r\n        id: 'email',\r\n        title: 'Email',\r\n        icon: <Mail />,\r\n        navLink: '/apps/email'\r\n      },\r\n      {\r\n        id: 'chat',\r\n        title: 'Chat',\r\n        icon: <MessageSquare />,\r\n        navLink: '/apps/chat'\r\n      },\r\n      {\r\n        id: 'todo',\r\n        title: 'Todo',\r\n        icon: <CheckSquare />,\r\n        navLink: '/apps/todo'\r\n      },\r\n      {\r\n        id: 'calendar',\r\n        title: 'Calendar',\r\n        icon: <Calendar />,\r\n        navLink: '/apps/calendar'\r\n      },\r\n      {\r\n        id: 'invoiceApp',\r\n        title: 'Invoice',\r\n        icon: <FileText />,\r\n        children: [\r\n          {\r\n            id: 'invoiceList',\r\n            title: 'List',\r\n            icon: <Circle />,\r\n            navLink: '/apps/invoice/list'\r\n          },\r\n          {\r\n            id: 'invoicePreview',\r\n            title: 'Preview',\r\n            icon: <Circle />,\r\n            navLink: '/apps/invoice/preview'\r\n          },\r\n          {\r\n            id: 'invoiceEdit',\r\n            title: 'Edit',\r\n            icon: <Circle />,\r\n            navLink: '/apps/invoice/edit'\r\n          },\r\n          {\r\n            id: 'invoiceAdd',\r\n            title: 'Add',\r\n            icon: <Circle />,\r\n            navLink: '/apps/invoice/add'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'roles-permissions',\r\n        title: 'Roles & Permissions',\r\n        icon: <Shield size={20} />,\r\n        children: [\r\n          {\r\n            id: 'roles',\r\n            title: 'Roles',\r\n            icon: <Circle size={12} />,\r\n            navLink: '/apps/roles'\r\n          },\r\n          {\r\n            id: 'permissions',\r\n            title: 'Permissions',\r\n            icon: <Circle size={12} />,\r\n            navLink: '/apps/permissions'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'eCommerce',\r\n        title: 'eCommerce',\r\n        icon: <ShoppingCart />,\r\n        children: [\r\n          {\r\n            id: 'shop',\r\n            title: 'Shop',\r\n            icon: <Circle />,\r\n            navLink: '/apps/ecommerce/shop'\r\n          },\r\n          {\r\n            id: 'detail',\r\n            title: 'Details',\r\n            icon: <Circle />,\r\n            navLink: '/apps/ecommerce/product-detail'\r\n          },\r\n          {\r\n            id: 'wishList',\r\n            title: 'Wish List',\r\n            icon: <Circle />,\r\n            navLink: '/apps/ecommerce/wishlist'\r\n          },\r\n          {\r\n            id: 'checkout',\r\n            title: 'Checkout',\r\n            icon: <Circle />,\r\n            navLink: '/apps/ecommerce/checkout'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'users',\r\n        title: 'User',\r\n        icon: <User />,\r\n        children: [\r\n          {\r\n            id: 'list',\r\n            title: 'List',\r\n            icon: <Circle />,\r\n            navLink: '/apps/user/list'\r\n          },\r\n          {\r\n            id: 'view',\r\n            title: 'View',\r\n            icon: <Circle />,\r\n            navLink: '/apps/user/view'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Outlet } from 'react-router-dom'\r\n\r\n// ** Core Layout Import\r\n// !Do not remove the Layout import\r\nimport Layout from '@layouts/HorizontalLayout'\r\n\r\n// ** Menu Items Array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\nconst HorizontalLayout = props => {\r\n  // const [menuData, setMenuData] = useState([])\r\n\r\n  // ** For ServerSide navigation\r\n  // useEffect(() => {\r\n  //   axios.get(URL).then(response => setMenuData(response.data))\r\n  // }, [])\r\n\r\n  return (\r\n    <Layout menuData={navigation} {...props}>\r\n      <Outlet />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default HorizontalLayout\r\n","// ** React Imports\r\nimport { Fragment, useEffect, memo } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/layout'\r\n\r\n// ** Styles\r\nimport 'animate.css/animate.css'\r\n\r\nconst LayoutWrapper = props => {\r\n  // ** Props\r\n  const { children, routeMeta } = props\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state)\r\n\r\n  const navbarStore = store.navbar\r\n  const layoutStored = store.layout.layout\r\n  const contentWidth = store.layout.contentWidth\r\n  const transition = store.layout.routerTransition\r\n  //** Vars\r\n  const appLayoutCondition =\r\n    (layoutStored.layout === 'horizontal' && !routeMeta) ||\r\n    (layoutStored.layout === 'horizontal' && routeMeta && !routeMeta.appLayout)\r\n  const Tag = appLayoutCondition ? 'div' : Fragment\r\n\r\n  // ** Clean Up Function\r\n  const cleanUp = () => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth('full'))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth(routeMeta.contentWidth))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\r\n      }\r\n    }\r\n    return () => cleanUp()\r\n  }, [routeMeta])\r\n\r\n  return (\r\n    <div\r\n      className={classnames('app-content content overflow-hidden', {\r\n        [routeMeta ? routeMeta.className : '']: routeMeta && routeMeta.className,\r\n        'show-overlay': navbarStore.query.length\r\n      })}\r\n    >\r\n      <div className='content-overlay'></div>\r\n      <div className='header-navbar-shadow' />\r\n      <div\r\n        className={classnames({\r\n          'content-wrapper': routeMeta && !routeMeta.appLayout,\r\n          'content-area-wrapper': routeMeta && routeMeta.appLayout,\r\n          'container-xxl p-0': contentWidth === 'boxed',\r\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\r\n        })}\r\n      >\r\n        <Tag {...(appLayoutCondition ? { className: 'content-body' } : {})}>{children}</Tag>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(LayoutWrapper)\r\n","// ** React Imports\r\nimport { Suspense } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\n// ** Utils\r\nimport { getUserData, getHomeRouteForLoggedInUser } from '@utils'\r\n\r\nconst PublicRoute = ({ children, route }) => {\r\n  if (route) {\r\n    const user = getUserData()\r\n\r\n    const restrictedRoute = route.meta && route.meta.restricted\r\n\r\n    if (user && restrictedRoute) {\r\n      return <Navigate to={getHomeRouteForLoggedInUser(user.role)} />\r\n    }\r\n  }\r\n\r\n  return <Suspense fallback={null}>{children}</Suspense>\r\n}\r\n\r\nexport default PublicRoute\r\n","// ** React Imports\r\nimport { Navigate } from 'react-router-dom'\r\nimport { useContext, Suspense } from 'react'\r\n\r\n// ** Context Imports\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\nconst PrivateRoute = ({ children, route }) => {\r\n  // ** Hooks & Vars\r\n  const ability = useContext(AbilityContext)\r\n  const user = JSON.parse(localStorage.getItem('userData'))\r\n\r\n  if (route) {\r\n    let action = null\r\n    let resource = null\r\n    let restrictedRoute = false\r\n\r\n    if (route.meta) {\r\n      action = route.meta.action\r\n      resource = route.meta.resource\r\n      restrictedRoute = route.meta.restricted\r\n    }\r\n    if (!user) {\r\n      return <Navigate to='/login' />\r\n    }\r\n    if (user && restrictedRoute) {\r\n      return <Navigate to='/' />\r\n    }\r\n    if (user && restrictedRoute && user.role === 'client') {\r\n      return <Navigate to='/access-control' />\r\n    }\r\n    if (user && !ability.can(action || 'read', resource)) {\r\n      return <Navigate to='/misc/not-authorized' replace />\r\n    }\r\n  }\r\n\r\n  return <Suspense fallback={null}>{children}</Suspense>\r\n}\r\n\r\nexport default PrivateRoute\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Routes Imports\r\nimport CustomRoutes from './Custom'\r\nimport InitRoutes from './Init'\r\n\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\nimport LayoutWrapper from '@src/@core/layouts/components/layout-wrapper'\r\n\r\n// ** Route Components\r\nimport PublicRoute from '@components/routes/PublicRoute'\r\nimport PrivateRoute from '@components/routes/PrivateRoute'\r\n\r\n// ** Utils\r\nimport { isObjEmpty } from '@utils'\r\n\r\nconst getLayout = {\r\n  blank: <BlankLayout />,\r\n  vertical: <VerticalLayout />,\r\n  horizontal: <HorizontalLayout />\r\n}\r\n\r\n// ** Document title\r\nconst TemplateTitle = 'Admin Panel'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/custom/products'\r\n\r\n// ** Merge Routes\r\nconst Routes = [...CustomRoutes, ...InitRoutes]\r\n\r\nconst getRouteMeta = route => {\r\n  if (isObjEmpty(route.element.props)) {\r\n    if (route.meta) {\r\n      return { routeMeta: route.meta }\r\n    } else {\r\n      return {}\r\n    }\r\n  }\r\n}\r\n\r\n// ** Return Filtered Array of Routes & Paths\r\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\r\n  const LayoutRoutes = []\r\n\r\n  if (Routes) {\r\n    Routes.filter(route => {\r\n      let isBlank = false\r\n      // ** Checks if Route layout or Default layout matches current layout\r\n      if (\r\n        (route.meta && route.meta.layout && route.meta.layout === layout) ||\r\n        ((route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout)\r\n      ) {\r\n        let RouteTag = PrivateRoute\r\n\r\n        // ** Check for public or private route\r\n        if (route.meta) {\r\n          route.meta.layout === 'blank' ? (isBlank = true) : (isBlank = false)\r\n          RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute\r\n        }\r\n        if (route.element) {\r\n          const Wrapper =\r\n            // eslint-disable-next-line multiline-ternary\r\n            isObjEmpty(route.element.props) && isBlank === false\r\n              ? // eslint-disable-next-line multiline-ternary\r\n              LayoutWrapper\r\n              : Fragment\r\n\r\n          route.element = (\r\n            <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\r\n              <RouteTag route={route}>{route.element}</RouteTag>\r\n            </Wrapper>\r\n          )\r\n        }\r\n\r\n        // Push route to LayoutRoutes\r\n        LayoutRoutes.push(route)\r\n      }\r\n      return LayoutRoutes\r\n    })\r\n  }\r\n  return LayoutRoutes\r\n}\r\n\r\nconst getRoutes = layout => {\r\n  const defaultLayout = layout || 'vertical'\r\n  const layouts = ['vertical', 'horizontal', 'blank']\r\n\r\n  const AllRoutes = []\r\n\r\n  layouts.forEach(layoutItem => {\r\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\r\n\r\n    AllRoutes.push({\r\n      path: '/',\r\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\r\n      children: LayoutRoutes\r\n    })\r\n  })\r\n  return AllRoutes\r\n}\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\r\n","// ** Router imports\r\nimport { lazy } from 'react'\r\n\r\n// ** Router imports\r\nimport { useRoutes, Navigate } from 'react-router-dom'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\n\r\n// ** Utils\r\nimport { getUserData, getHomeRouteForLoggedInUser } from '../utility/Utils'\r\n\r\n// ** Components\r\nconst Error = lazy(() => import('../views/pages/misc/Error'))\r\nconst Login = lazy(() => import('../views/pages/authentication/Login'))\r\nconst NotAuthorized = lazy(() => import('../views/pages/misc/NotAuthorized'))\r\n\r\nconst Router = ({ allRoutes }) => {\r\n  const getHomeRoute = () => {\r\n    const user = getUserData()\r\n    if (user) {\r\n      return getHomeRouteForLoggedInUser(user.role)\r\n    } else {\r\n      return '/login'\r\n    }\r\n  }\r\n\r\n  const routes = useRoutes([\r\n    {\r\n      path: '/',\r\n      index: true,\r\n      element: <Navigate replace to={getHomeRoute()} />\r\n    },\r\n    {\r\n      path: '/login',\r\n      element: <BlankLayout />,\r\n      children: [{ path: '/login', element: <Login /> }]\r\n    },\r\n    {\r\n      path: '/auth/not-auth',\r\n      element: <BlankLayout />,\r\n      children: [{ path: '/auth/not-auth', element: <NotAuthorized /> }]\r\n    },\r\n    {\r\n      path: '*',\r\n      element: <BlankLayout />,\r\n      children: [{ path: '*', element: <Error /> }]\r\n    },\r\n    ...allRoutes\r\n  ])\r\n\r\n  return routes\r\n}\r\n\r\nexport default Router\r\n","import React, { useState, useEffect, Suspense } from 'react'\r\n\r\n// ** Router Import\r\nimport Router from './router/Router'\r\n\r\n// ** Routes & Default Routes\r\nimport { getRoutes } from './router/routes'\r\n\r\n// ** Hooks Imports\r\nimport { useLayout } from '@hooks/useLayout'\r\n\r\nconst App = () => {\r\n  const [allRoutes, setAllRoutes] = useState([])\r\n\r\n  // ** Hooks\r\n  const { layout } = useLayout()\r\n\r\n  useEffect(() => {\r\n    setAllRoutes(getRoutes(layout))\r\n  }, [layout])\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <Router allRoutes={allRoutes} />\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"sourceRoot":""}